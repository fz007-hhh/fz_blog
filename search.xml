<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Obsidian——主题配置和插件推荐</title>
    <url>/snm6s8/</url>
    <content><![CDATA[<p>之前三年基本都在使用 Typora 记录笔记，Typora 本身非常轻量，提供的基础功能比较齐全，而且 21 年我刚开始用的时候开始免费的（后来不知道为啥突然要收费了）。不过，用的时间久了，还是发现 Typora 本身还是有不少的局限性：</p>
<ol>
<li>代码块功能局限：我的笔记中往往需要创建不同语言的代码块，但是使用 typora 的默认快捷键之后每次都得手动修改语言格式。虽说这个问题我通过自己编写 ahk 脚本解决了，不过每种语言都按一种键位有点蛋疼。</li>
<li>修改主题比较困难：Typora 是支持下载主题、更换主题的（需要翻墙），也有很多好看的皮肤。可是，我一般喜欢将某几款主题好看的地方综合起来，在 Typora 中，这就得直接修改主题的 css 代码才能做到了，一点一点的盯着改对我来说并不是很友好 😢。</li>
<li>不具备多文件管理能力：Typora 每次只能打开一个文件，多个文件只能一个一个的打开，如果我想同时看多个文件就很麻烦；每次 Ctrl+O/Ctrl+P 找文件也实在难以接受；</li>
<li>扩展性差：Typora 没有插件市场，每次缺一点小功能就得现找解决方法。如果说有一个笔记软件可以安装插件，我只需要通过安装插件就可以扩展多个功能就方便得多了。</li>
</ol>
<h2 id="为什么不使用-notion"><a class="markdownIt-Anchor" href="#为什么不使用-notion"></a> 🤔 为什么不使用 Notion</h2>
<p>其实今年 8 月份的时候就想换笔记软件的，当时是我的好哥们儿推荐的 Notion，Notion 的共享属性非常非常强，只要你写完一篇笔记，就能自动保存到云服务器上，而且使用 notion 搭建博客也非常方便。不仅如此，notion 支持 <mark>基本的 markdown 语法</mark>，笔记中以文本块为单位，上下活动文本块非常容易；notion 还有嵌套列表、dataview（方便管理笔记）、支持插件、同时有很多非常好看的模版，笔记添加头图也很简单。</p>
<p>我好哥们的习惯是在 Notion 上写随笔，在家还有公司都可以随时写点小笔记，这样不管在哪，只要开下浏览器就能看到；如果使用的是 Typora，那就得 <mark>写笔记 -&gt; 同步笔记到 Git -&gt; Git 拉取笔记 -&gt; 看笔记</mark>。notion 还支持在笔记中嵌入视频、图片（<mark>上传图片使用的是 notion 自己的图床，也就是说，不用你额外配置图床</mark>），网上也有很多博主出 notion 的教程。</p>
<p><strong>不过，我最终还是放弃了 Notion。</strong></p>
<p>原因是，notion 支持 <mark>基本的 markdown 语法</mark>，这个基本对我来说是硬伤。长久以来使用 Typora 已经让我对 markdown 的语法有了依赖性，在 markdown 语法中，仅需<strong>两个"$"符</strong>就可以编写数学公式，仅需<strong>三个 ` + 语言格式</strong> 就可以写代码块。可是在 notion 中不支持这两个功能，尤其是写代码块的时候还必须得手动选择语言格式，强迫症极重的我实在难以接受 😠。</p>
<p>并且，在了解 Obsidian 之后，我发现其实 Notion 的很多功能在 Obsidian 也可以实现，Obsidian 的插件市场很大，而且更新还很频繁，当然，最重要的还是：<mark>Obsidian 完全支持 markdown 的语法，并且具备文件管理功能。</mark> 卧槽！这不就是我想要的效果吗？！</p>
<h2 id="官网下载安装"><a class="markdownIt-Anchor" href="#官网下载安装"></a> 官网下载安装</h2>
<p>Obsidian 是免费的，直接去官网下载就可以了，地址：<a class="link" href="https://obsidian.md/download">https://obsidian.md/download<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> 。<mark>这里先提醒一下，使用 Obsidian 的前提是你能够翻墙！！因为其插件市场是需要翻墙才能访问的！！</mark></p>
<p>下载好之后，直接选择合适的路径安装即可，然后直接双击运行就可以了。第一次运行应该会让你创建一个分区，这里可以新建一个分区，名字自定义，之后写笔记尽量都在一个分区里写，<mark>因为Obsidian里，每个分区的插件都是独立的，如果你突然切换分区，那么新分区里是没有旧分区里的插件的！！</mark>（<strong>当然后面的教程会说如何用插件解决</strong>）<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241127234438.png" alt="image.png|525"></p>
<h2 id="obsidian-基础配置"><a class="markdownIt-Anchor" href="#obsidian-基础配置"></a> Obsidian 基础配置</h2>
<h3 id="1语言设置"><a class="markdownIt-Anchor" href="#1语言设置"></a> 1.语言设置</h3>
<p>刚安装运行 Obsidian 时，你看到的应该是纯英文的界面，文件夹啥的都是英文。这个需要在这里改成 <strong>简体中文</strong>。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241127233505.png" alt="image.png"></p>
<h3 id="2字体设置"><a class="markdownIt-Anchor" href="#2字体设置"></a> 2.字体设置</h3>
<p>看到上面那张图应该会发现，我使用的字体和默认的字体不一样，这个字体需要你额外下载安装：<a class="link" href="https://github.com/lxgw/LxgwWenKai-Screen/releases/tag/v1.501">https://github.com/lxgw/LxgwWenKai-Screen/releases/tag/v1.501<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p>在官网下载 ttf 文件的字体，然后双击安装（<strong>最好以管理员模式安装</strong>），然后在下面的设置这里，点击管理，手动输入 <code>霞鹜文楷 GB 屏幕指纹版</code>，就可以使用这个字体了。其中，<strong>代码字体不推荐用霞鹜文楷</strong>，因为这个字体不是等宽的，一开始看的话可能会感觉代码比较挤。</p>
<p>当然了，字体的喜好因人而异，如果你有其他喜欢的字体，直接在这里修改即可。</p>
<p><img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241127233740.png" alt="image.png"></p>
<h3 id="3主题设置"><a class="markdownIt-Anchor" href="#3主题设置"></a> 3.主题设置</h3>
<p>Obsidian原生的主题可能比较简陋，不过Obsidian有个主题市场，可以在市场中下载安装自己喜欢的主题，点击这个 <strong>管理</strong>，就可以进入插件市场，选择自己喜欢的主题就可以了。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241127234314.png" alt="image.png"></p>
<p>主题的话多种多样，选择自己喜欢的就可以了，这里有的主题是没有夜间模式的，选择的时候请斟酌。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241127234846.png" alt="image.png"></p>
]]></content>
      <categories>
        <category>IDE配置</category>
      </categories>
      <tags>
        <tag>Obsidian</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7 基础命令爆出255返回码</title>
    <url>/sni2sz/</url>
    <content><![CDATA[<p>cron 是一个用于在指定时间自动执行预定任务的守护进程，/etc/cron.hourly/ 目录中的脚本每小时会被 cron进程 自动执行一次</p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu配置ssh</title>
    <url>/sni2r9/</url>
    <content><![CDATA[<p>在 Ubuntu 上配置 SSH 以便使用 Visual Studio Code (VSCode) 进行连接，可以按照以下步骤进行：</p>
<h3 id="1-安装-openssh-服务器"><a class="markdownIt-Anchor" href="#1-安装-openssh-服务器"></a> 1. 安装 OpenSSH 服务器</h3>
<p>首先，你需要确保你的 Ubuntu 系统上安装了 OpenSSH 服务器。打开终端，执行以下命令：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install openssh-server</span><br></pre></td></tr></table></figure></div>
<h3 id="2-启动和启用-ssh-服务"><a class="markdownIt-Anchor" href="#2-启动和启用-ssh-服务"></a> 2. 启动和启用 SSH 服务</h3>
<p>安装完成后，启动 SSH 服务并确保它在系统启动时自动启动：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start ssh</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> ssh</span><br></pre></td></tr></table></figure></div>
<h3 id="3-检查-ssh-服务状态"><a class="markdownIt-Anchor" href="#3-检查-ssh-服务状态"></a> 3. 检查 SSH 服务状态</h3>
<p>你可以使用以下命令检查 SSH 服务的状态：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status ssh</span><br></pre></td></tr></table></figure></div>
<p>确保服务正在运行，并且没有错误信息。</p>
<h3 id="4-配置-ssh可选"><a class="markdownIt-Anchor" href="#4-配置-ssh可选"></a> 4. 配置 SSH（可选）</h3>
<p>默认情况下，SSH 使用的配置文件位于 <code>/etc/ssh/sshd_config</code>。你可以根据需要修改此文件以增强安全性，例如禁用密码登录，启用密钥登录等。编辑配置文件：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></div>
<p>以下是一些常见的配置选项：</p>
<ul>
<li>
<p><strong>禁用密码登录</strong>（仅允许使用密钥登录）：</p>
 <div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure></div>
</li>
<li>
<p><strong>更改默认 SSH 端口</strong>（可选）：</p>
 <div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Port 2222</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<p>更改后，保存并退出编辑器。然后重新启动 SSH 服务以使更改生效：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart ssh</span><br></pre></td></tr></table></figure></div>
<h3 id="5-配置防火墙如果适用"><a class="markdownIt-Anchor" href="#5-配置防火墙如果适用"></a> 5. 配置防火墙（如果适用）</h3>
<p>如果你的系统启用了防火墙，确保 SSH 端口（默认是 22 或你更改后的端口）是开放的。使用以下命令允许 SSH 通过 UFW（如果你使用 UFW 作为防火墙）：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ufw allow ssh</span><br><span class="line"><span class="comment"># 如果你更改了端口，例如使用 2222：</span></span><br><span class="line"><span class="comment"># sudo ufw allow 2222</span></span><br></pre></td></tr></table></figure></div>
<h3 id="6-获取服务器的-ip-地址"><a class="markdownIt-Anchor" href="#6-获取服务器的-ip-地址"></a> 6. 获取服务器的 IP 地址</h3>
<p>你可以使用以下命令获取你的服务器的 IP 地址：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure></div>
<h3 id="7-在-vscode-中配置-ssh"><a class="markdownIt-Anchor" href="#7-在-vscode-中配置-ssh"></a> 7. 在 VSCode 中配置 SSH</h3>
<ol>
<li>
<p><strong>安装 Remote - SSH 插件</strong>：</p>
<ul>
<li>打开 VSCode。</li>
<li>转到扩展视图 (<code>Ctrl + Shift + X</code>)。</li>
<li>搜索并安装 <strong>Remote - SSH</strong> 插件。</li>
</ul>
</li>
<li>
<p><strong>添加 SSH 主机</strong>：</p>
<ul>
<li>
<p>按 <code>F1</code> 或 <code>Ctrl + Shift + P</code> 打开命令面板。</p>
</li>
<li>
<p>输入并选择 <strong>Remote-SSH: Add New SSH Host</strong>。</p>
</li>
<li>
<p>输入你的 SSH 连接命令，例如：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh username@server_ip</span><br></pre></td></tr></table></figure></div>
<p>替换 <code>username</code> 和 <code>server_ip</code> 为你的实际用户名和服务器的 IP 地址。</p>
</li>
</ul>
</li>
<li>
<p><strong>选择 SSH 配置文件</strong>：</p>
<ul>
<li>VSCode 会提示你选择 SSH 配置文件，通常是 <code>~/.ssh/config</code>。</li>
</ul>
</li>
<li>
<p><strong>连接到 SSH 主机</strong>：</p>
<ul>
<li>重新打开命令面板，输入并选择 <strong>Remote-SSH: Connect to Host</strong>，然后选择你刚刚添加的主机。</li>
</ul>
</li>
<li>
<p><strong>输入密码或密钥</strong>（如果使用密码）：</p>
<ul>
<li>如果 SSH 配置为密码验证，你需要输入密码。如果配置为密钥验证且密钥已设置为默认，VSCode 会自动使用密钥。</li>
</ul>
</li>
</ol>
<h3 id="8-连接后"><a class="markdownIt-Anchor" href="#8-连接后"></a> 8. 连接后</h3>
<p>一旦连接成功，你就可以像在本地一样编辑远程服务器上的文件了。你可以打开终端，运行命令，并使用 VSCode 的所有功能。</p>
<p>通过以上步骤，你就可以方便地在 Ubuntu 上配置 SSH，以便使用 VSCode 进行连接和远程开发。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>SeaBattle海战游戏</title>
    <url>/sni31d/</url>
    <content><![CDATA[<h2 id="规则"><a class="markdownIt-Anchor" href="#规则"></a> 规则</h2>
<ul>
<li>游戏中两个玩家在两块完全相同的棋盘（10x10方格）上进行，两个玩家分别在各自的棋盘上放置他们的舰艇，当然对手是看不见的。</li>
<li>每一个玩家都有5艘舰艇：一艘驱逐舰（2格），一艘潜艇（3格），一艘巡洋舰（3格），一艘战列舰（4格）和一艘航空母舰（5格）。</li>
<li>每艘舰艇都在棋盘上占据一定数量的格子，每艘舰艇既可以横着放，也可以竖着放，但任意两艘舰艇不能互相交叠。</li>
<li>游戏的玩法是双方轮流“轰炸”对方的舰艇，每次轰炸的结果是击中或未击中都会显示，如果击中，该玩家就可以继续攻击，直到击不中为止。</li>
<li>游戏的目标是赶在对手之前把他所有的舰艇都击沉。</li>
</ul>
<h2 id="代码说明"><a class="markdownIt-Anchor" href="#代码说明"></a> 代码说明</h2>
<h2 id="代码文件"><a class="markdownIt-Anchor" href="#代码文件"></a> 代码文件</h2>
<blockquote>
<p>common.c 通用函数，打印信息</p>
</blockquote>
<blockquote>
<p>server.c 双方对战主函数。提供上次是否击中信息，轰炸</p>
</blockquote>
<blockquote>
<p>playera.c 玩家A舰艇部署和轰炸策略，需要自己修改，已给出例子</p>
</blockquote>
<blockquote>
<p>playerb.c 玩家B舰艇部署和轰炸策略，需要自己修改，已给出例子</p>
</blockquote>
<h2 id="舰艇说明"><a class="markdownIt-Anchor" href="#舰艇说明"></a> 舰艇说明</h2>
<p>舰艇采用宏定义 见[[common.h]]文件</p>
<p>D为驱逐舰，S为潜艇，C为巡洋舰，B为战列舰，A为航母</p>
<p>部署后可以打印查看，如：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">DD~~~~~~~~</span><br><span class="line">SSS~~~~~~~</span><br><span class="line">CCC~~~~~~~</span><br><span class="line">BBBB~~~~~~</span><br><span class="line">AAAAA~~~~~</span><br><span class="line">~~~~~~~~~~</span><br><span class="line">~~~~~~~~~~</span><br><span class="line">~~~~~~~~~~</span><br><span class="line">~~~~~~~~~~</span><br><span class="line">~~~~~~~~~~</span><br></pre></td></tr></table></figure></div>
<h3 id="参与者可以任意选择玩家a或玩家b分别修改playerac和playerbc的内容"><a class="markdownIt-Anchor" href="#参与者可以任意选择玩家a或玩家b分别修改playerac和playerbc的内容"></a> 参与者可以任意选择玩家A或玩家B，分别修改playera.c和playerb.c的内容。</h3>
<blockquote>
<p>需要修改的地方：</p>
<blockquote>
<ol>
<li>PlayerAName 或 PlayerBName 改为自己的名字。</li>
</ol>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<ol start="2">
<li>DeploymentA 或 DeploymentB 对舰艇进行部署。</li>
</ol>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<ol start="3">
<li>StrategyA 或 StrategyB 根据服务器提供的信息制定攻击策略，每次只能调用一次开火函数。</li>
</ol>
</blockquote>
</blockquote>
<p><strong>注意：player程序中只能使用server提供的ALastHitB、firetoA之类的函数，可以使用适当的数据结构记录历史的击中信息，但不能出现获取对方部署之类的函数，否则视为作弊，直接判负。</strong></p>
<p>可以有两份策略，也可以使用完全相同的策略。</p>
<h3 id="使用说明"><a class="markdownIt-Anchor" href="#使用说明"></a> 使用说明</h3>
<p>除了player文件其他文件都不用修改。</p>
<p>自己编写好player代码，<mark>将所有文件加入到一个VC工程中，编译运行即可</mark>。</p>
<p>先在本地调试自己的策略，然后将playera.c和playerb.c上传到自己的文件夹中。</p>
<p>也可以查看其他人的代码，与其他人进行对战。但不要针对其他人的部署进行攻击，因为实际中是不能看到对方部署的，而且要与所有人进行对战，每个人的部署都会不同。</p>
<p><strong>每隔一定时间我会写脚本自动抓取每组的代码进行相互对战，胜率最高组有一定奖励！！！</strong></p>
<h2 id="玩得愉快"><a class="markdownIt-Anchor" href="#玩得愉快"></a> 玩得愉快！</h2>
<p>后续变种：</p>
<ul>
<li>舰艇不能接触</li>
<li>舰艇可对角线排放</li>
<li>未击沉舰艇每回合后可移动（移动距离与其剩余格数一致）</li>
<li>每个玩家都有一发特殊炮弹，可以击打2x2区域或1x4区域。</li>
<li>增加计时功能，策略时间超过一定值直接忽略。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;player.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;server.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> initial = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> researchButton = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">Informations</span> &#123;</span><br><span class="line">  <span class="comment">/* data */</span></span><br><span class="line">  <span class="type">int</span> hitNum;</span><br><span class="line">  <span class="type">int</span> optionS;</span><br><span class="line">  <span class="type">int</span> optionH;</span><br><span class="line">  <span class="type">int</span> last_Hit_Index[<span class="number">2</span>];</span><br><span class="line">  <span class="type">int</span> found[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">&#125; Information;</span><br><span class="line"></span><br><span class="line">Battlefield PlayerA_BF;</span><br><span class="line"><span class="type">char</span>* PlayerAName = <span class="string">&quot;fanzheng&quot;</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="comment">// 玩家部署舰艇</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">DeploymentA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line">      PlayerA_BF.area[i][j] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++) &#123;</span><br><span class="line">      Weight[i][j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">// add your arrangement, for example:</span></span><br><span class="line">  PlayerA_BF.area[<span class="number">0</span>][<span class="number">0</span>] = D;</span><br><span class="line">  PlayerA_BF.area[<span class="number">0</span>][<span class="number">1</span>] = D;</span><br><span class="line">  PlayerA_BF.area[<span class="number">2</span>][<span class="number">2</span>] = S;</span><br><span class="line">  PlayerA_BF.area[<span class="number">2</span>][<span class="number">3</span>] = S;</span><br><span class="line">  PlayerA_BF.area[<span class="number">2</span>][<span class="number">4</span>] = S;</span><br><span class="line">  PlayerA_BF.area[<span class="number">4</span>][<span class="number">4</span>] = C;</span><br><span class="line">  PlayerA_BF.area[<span class="number">4</span>][<span class="number">5</span>] = C;</span><br><span class="line">  PlayerA_BF.area[<span class="number">4</span>][<span class="number">6</span>] = C;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">5</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">6</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">7</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">8</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">2</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">3</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">4</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">5</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">6</span>] = A;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printBF</span>(&amp;PlayerA_BF);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">getAttack_Object_Index</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span>* attack;</span><br><span class="line">  <span class="keyword">return</span> attack;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lasti = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lastj = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 根据上次是否击中确定策略，选择下一个攻击点</span></span><br><span class="line"><span class="comment">// 可以自己创建数据结构记录之前的击中与否信息</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">StrategyA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, max;</span><br><span class="line">  <span class="comment">// 从服务器端获取上次攻击是否击中信息</span></span><br><span class="line">  <span class="type">int</span> isHit = <span class="built_in">ALastHitB</span>();</span><br><span class="line">  <span class="keyword">if</span> (flag != <span class="number">0</span>) &#123;</span><br><span class="line">    Weight[lasti][lastj] -= <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">if</span> (isHit == <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="comment">// 打过的点权值减到底，击中的话给上下左右的点增加权重</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">2</span>][lastj] += <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">2</span>][lastj] += <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">2</span>] += <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">2</span>] += <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">3</span>][lastj] += <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">3</span>][lastj] += <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">3</span>] += <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">3</span>] += <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">4</span>][lastj] += <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">4</span>][lastj] += <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">4</span>] += <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">4</span>] += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 打过的点权值减到底，没击中的话给上下左右的点减少权重</span></span><br><span class="line">      Weight[lasti][lastj] -= <span class="number">10000</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">2</span>][lastj] -= <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">2</span>][lastj] -= <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">2</span>] -= <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">2</span>] -= <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">3</span>][lastj] -= <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">3</span>][lastj] -= <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">3</span>] -= <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">3</span>] -= <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">4</span>][lastj] -= <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">4</span>][lastj] -= <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">4</span>] -= <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">4</span>] -= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 选择权重最大的点开火</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; <span class="number">10</span>; l++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (k == <span class="number">0</span> &amp;&amp; l == <span class="number">0</span>) &#123;</span><br><span class="line">        max = Weight[k][l];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (Weight[k][l] &gt; max) &#123;</span><br><span class="line">        max = Weight[k][l];</span><br><span class="line">        i = k;</span><br><span class="line">        j = l;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 向(i,j)位置开火</span></span><br><span class="line">  <span class="built_in">firetoB</span>(i, j);</span><br><span class="line">  flag = <span class="number">1</span>;</span><br><span class="line">  lasti = i;</span><br><span class="line">  lastj = j;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241030173257.png"
                      alt="image.png" 
                ></p>
<p>目前这个算法的缺点在于贪心的范围过广，很多时候没有意义。其实，每次打中之后都应该更关注于离集中点最近的区域，也即击中点的四周。如果某个击中点的四周都没有再次击中，就要考虑换位置了。</p>
<p>但是目前这个算法非常依赖于一次击中，然后再根据击中的区域逐步蔓延，可是这样的话，如果用户放的位置非常稀疏，这样可能会需要遍历整个数组才能找到所有炮弹，</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;player.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;server.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> initial = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> researchButton = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">Informations</span> &#123;</span><br><span class="line"> <span class="comment">/* data */</span></span><br><span class="line"> <span class="type">int</span> hitNum;</span><br><span class="line"> <span class="type">int</span> optionS;</span><br><span class="line"> <span class="type">int</span> optionH;</span><br><span class="line"> <span class="type">int</span> last_Hit_Index[<span class="number">2</span>];</span><br><span class="line"> <span class="type">int</span> found[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">&#125; Information;</span><br><span class="line"></span><br><span class="line">Battlefield PlayerA_BF;</span><br><span class="line"><span class="type">char</span>* PlayerAName = <span class="string">&quot;fanzheng&quot;</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> fanz_Step_Memory[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 玩家部署舰艇</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">DeploymentA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line">   PlayerA_BF.area[i][j] = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++)</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++) &#123;</span><br><span class="line">   Weight[i][j] = <span class="number">0</span>;</span><br><span class="line">   fanz_Step_Memory[i][j]=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">4</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">  Weight[<span class="number">4</span>-j][j]=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">9</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">  Weight[<span class="number">9</span>-j][j]=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">5</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">  Weight[<span class="number">14</span>-j][j]=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// add your arrangement, for example:</span></span><br><span class="line"> PlayerA_BF.area[<span class="number">0</span>][<span class="number">0</span>] = D;</span><br><span class="line"> PlayerA_BF.area[<span class="number">0</span>][<span class="number">1</span>] = D;</span><br><span class="line"> PlayerA_BF.area[<span class="number">2</span>][<span class="number">2</span>] = S;</span><br><span class="line"> PlayerA_BF.area[<span class="number">2</span>][<span class="number">3</span>] = S;</span><br><span class="line"> PlayerA_BF.area[<span class="number">2</span>][<span class="number">4</span>] = S;</span><br><span class="line"> PlayerA_BF.area[<span class="number">4</span>][<span class="number">4</span>] = C;</span><br><span class="line"> PlayerA_BF.area[<span class="number">4</span>][<span class="number">5</span>] = C;</span><br><span class="line"> PlayerA_BF.area[<span class="number">4</span>][<span class="number">6</span>] = C;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">5</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">6</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">7</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">8</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">2</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">3</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">4</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">5</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">6</span>] = A;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">printBF</span>(&amp;PlayerA_BF);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">getAttack_Object_Index</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="type">int</span>* attack;</span><br><span class="line"> <span class="keyword">return</span> attack;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lasti = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lastj = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> clean_num=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据上次是否击中确定策略，选择下一个攻击点</span></span><br><span class="line"><span class="comment">// 可以自己创建数据结构记录之前的击中与否信息</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">StrategyA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, max;</span><br><span class="line"> <span class="comment">// 从服务器端获取上次攻击是否击中信息</span></span><br><span class="line"> <span class="type">int</span> isHit = <span class="built_in">ALastHitB</span>();</span><br><span class="line"> <span class="keyword">if</span> (flag != <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="comment">// Weight[lasti][lastj] -= 10000;</span></span><br><span class="line">  <span class="keyword">if</span> (isHit == <span class="number">1</span>) &#123;</span><br><span class="line">   fanz_Step_Memory[lasti][lastj]=<span class="number">1</span>;</span><br><span class="line">   <span class="comment">// clean_num=0;</span></span><br><span class="line">   <span class="comment">// 这里如果击中点的四周也有击中点，就可以知道方向了</span></span><br><span class="line">   <span class="comment">// 水平方向</span></span><br><span class="line">   <span class="keyword">if</span>((lastj&gt;<span class="number">0</span>&amp;&amp;fanz_Step_Memory[lasti][lastj<span class="number">-1</span>]==<span class="number">1</span>)||(lastj&lt;<span class="number">10</span>&amp;&amp;fanz_Step_Memory[lasti][lastj<span class="number">+1</span>]==<span class="number">1</span>))&#123;</span><br><span class="line">    <span class="type">int</span> cur=lastj;</span><br><span class="line">    <span class="keyword">while</span> (cur&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[lasti][cur]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">     cur--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&gt;=<span class="number">0</span>) Weight[lasti][cur]+=<span class="number">10</span>;</span><br><span class="line">    cur=lastj;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[lasti][cur]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&lt;<span class="number">10</span>) Weight[lasti][cur]+=<span class="number">10</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 竖直方向</span></span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>((lasti&gt;<span class="number">0</span>&amp;&amp;fanz_Step_Memory[lasti<span class="number">-1</span>][lastj]==<span class="number">1</span>)||(lasti&lt;<span class="number">10</span>&amp;&amp;fanz_Step_Memory[lasti<span class="number">+1</span>][lastj]==<span class="number">1</span>))&#123;</span><br><span class="line">    <span class="type">int</span> cur=lasti;</span><br><span class="line">    <span class="keyword">while</span> (cur&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[cur][lastj]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">     cur--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&gt;=<span class="number">0</span>) Weight[cur][lastj]+=<span class="number">10</span>;</span><br><span class="line">    cur=lasti;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[cur][lastj]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&lt;<span class="number">10</span>) Weight[cur][lastj]+=<span class="number">10</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 打过的点权值减到底，击中的话给上下左右的点增加权重</span></span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="comment">// 打过的点权值减到底，没击中的话给上下左右的点减少权重</span></span><br><span class="line">   <span class="comment">// Weight[lasti][lastj] -= 10000;</span></span><br><span class="line">   fanz_Step_Memory[lasti][lastj]=<span class="number">-1</span>;</span><br><span class="line">   <span class="comment">// clean_num++;</span></span><br><span class="line">   <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">   <span class="comment">// if(clean_num&gt;=4)&#123;</span></span><br><span class="line">   <span class="comment">//   destoryCenter();</span></span><br><span class="line">   <span class="comment">//   clean_num=0;</span></span><br><span class="line">   <span class="comment">//  &#125;</span></span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 选择权重最大的点开火</span></span><br><span class="line"> max=<span class="number">-200</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; <span class="number">10</span>; l++) &#123;</span><br><span class="line">   <span class="keyword">if</span>(fanz_Step_Memory[k][l]==<span class="number">0</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span> (Weight[k][l] &gt; max) &#123;</span><br><span class="line">    max = Weight[k][l];</span><br><span class="line">    i = k;</span><br><span class="line">    j = l;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 向(i,j)位置开火</span></span><br><span class="line"> <span class="built_in">firetoB</span>(i, j);</span><br><span class="line"> flag = <span class="number">1</span>;</span><br><span class="line"> lasti = i;</span><br><span class="line"> lastj = j;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">destoryCenter</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="comment">// 打破每行连续安全区域的中间位置</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">  <span class="type">int</span> start=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(;start&lt;<span class="number">10</span>;start++)&#123;</span><br><span class="line">   <span class="keyword">if</span>(fanz_Step_Memory[i][start]==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> cur=start;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[i][cur]!=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    Weight[i][(start+cur<span class="number">-1</span>)&gt;&gt;<span class="number">1</span>]+=<span class="number">2</span>;</span><br><span class="line">    start=cur;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 打破每列连续安全区域的中间位置</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">  <span class="type">int</span> start=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(;start&lt;<span class="number">10</span>;start++)&#123;</span><br><span class="line">   <span class="keyword">if</span>(fanz_Step_Memory[start][i]==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> cur=start;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[cur][i]!=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Weight[(start+cur<span class="number">-1</span>)&gt;&gt;<span class="number">1</span>][i]+=<span class="number">2</span>;</span><br><span class="line">    start=cur;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241031142354.png"
                      alt="image.png" 
                ></p>
<p>尝试标记已打结点周围的区域，反而导致胜率大幅下降？</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;player.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;server.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> initial = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> researchButton = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">Informations</span> &#123;</span><br><span class="line"> <span class="comment">/* data */</span></span><br><span class="line"> <span class="type">int</span> hitNum;</span><br><span class="line"> <span class="type">int</span> optionS;</span><br><span class="line"> <span class="type">int</span> optionH;</span><br><span class="line"> <span class="type">int</span> last_Hit_Index[<span class="number">2</span>];</span><br><span class="line"> <span class="type">int</span> found[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">&#125; Information;</span><br><span class="line"></span><br><span class="line">Battlefield PlayerA_BF;</span><br><span class="line"><span class="type">char</span>* PlayerAName = <span class="string">&quot;fanzheng&quot;</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> fanz_Step_Memory[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 玩家部署舰艇</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">DeploymentA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line">   PlayerA_BF.area[i][j] = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++)</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++) &#123;</span><br><span class="line">   Weight[i][j] = <span class="number">0</span>;</span><br><span class="line">   fanz_Step_Memory[i][j]=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">4</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">  Weight[<span class="number">4</span>-j][j]=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">9</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">  Weight[<span class="number">9</span>-j][j]=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">5</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">  Weight[<span class="number">14</span>-j][j]=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// add your arrangement, for example:</span></span><br><span class="line"> PlayerA_BF.area[<span class="number">0</span>][<span class="number">0</span>] = D;</span><br><span class="line"> PlayerA_BF.area[<span class="number">0</span>][<span class="number">1</span>] = D;</span><br><span class="line"> PlayerA_BF.area[<span class="number">2</span>][<span class="number">2</span>] = S;</span><br><span class="line"> PlayerA_BF.area[<span class="number">2</span>][<span class="number">3</span>] = S;</span><br><span class="line"> PlayerA_BF.area[<span class="number">2</span>][<span class="number">4</span>] = S;</span><br><span class="line"> PlayerA_BF.area[<span class="number">4</span>][<span class="number">4</span>] = C;</span><br><span class="line"> PlayerA_BF.area[<span class="number">4</span>][<span class="number">5</span>] = C;</span><br><span class="line"> PlayerA_BF.area[<span class="number">4</span>][<span class="number">6</span>] = C;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">5</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">6</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">7</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">8</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">2</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">3</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">4</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">5</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">6</span>] = A;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">printBF</span>(&amp;PlayerA_BF);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">getAttack_Object_Index</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="type">int</span>* attack;</span><br><span class="line"> <span class="keyword">return</span> attack;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lasti = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lastj = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> small_i=<span class="number">20</span>,big_i=<span class="number">-1</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> small_j=<span class="number">20</span>,big_j=<span class="number">-1</span>;</span><br><span class="line"><span class="comment">// 最多可错次数</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> wrong_time=<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getmax</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a&gt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getmin</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a&lt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateSmallAndBig</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span></span>&#123;</span><br><span class="line">  small_i=<span class="built_in">getmin</span>(small_i,i);</span><br><span class="line">  big_i=<span class="built_in">getmax</span>(big_i,i);</span><br><span class="line">  small_j=<span class="built_in">getmin</span>(small_j,j);</span><br><span class="line">  big_j=<span class="built_in">getmax</span>(big_j,j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据上次是否击中确定策略，选择下一个攻击点</span></span><br><span class="line"><span class="comment">// 可以自己创建数据结构记录之前的击中与否信息</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">StrategyA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, max;</span><br><span class="line"> <span class="comment">// 从服务器端获取上次攻击是否击中信息</span></span><br><span class="line"> <span class="type">int</span> isHit = <span class="built_in">ALastHitB</span>();</span><br><span class="line"> <span class="keyword">if</span> (flag != <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="comment">// Weight[lasti][lastj] -= 10000;</span></span><br><span class="line">  <span class="keyword">if</span> (isHit == <span class="number">1</span>) &#123;</span><br><span class="line">   fanz_Step_Memory[lasti][lastj]=<span class="number">1</span>;</span><br><span class="line">   <span class="built_in">updateSmallAndBig</span>(lasti,lastj);</span><br><span class="line">   <span class="comment">// 这里如果击中点的四周也有击中点，就可以知道方向了</span></span><br><span class="line">   <span class="comment">// 水平方向</span></span><br><span class="line">   <span class="keyword">if</span>((lastj&gt;<span class="number">0</span>&amp;&amp;fanz_Step_Memory[lasti][lastj<span class="number">-1</span>]==<span class="number">1</span>)||(lastj&lt;<span class="number">10</span>&amp;&amp;fanz_Step_Memory[lasti][lastj<span class="number">+1</span>]==<span class="number">1</span>))&#123;</span><br><span class="line">    <span class="comment">// 两块以上每次正确之后最多可以错两次</span></span><br><span class="line">    wrong_time=<span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> cur=lastj;</span><br><span class="line">    <span class="keyword">while</span> (cur&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[lasti][cur]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">     cur--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&gt;=<span class="number">0</span>) Weight[lasti][cur]+=<span class="number">10</span>;</span><br><span class="line">    cur=lastj;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[lasti][cur]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&lt;<span class="number">10</span>) Weight[lasti][cur]+=<span class="number">10</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 竖直方向</span></span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>((lasti&gt;<span class="number">0</span>&amp;&amp;fanz_Step_Memory[lasti<span class="number">-1</span>][lastj]==<span class="number">1</span>)||(lasti&lt;<span class="number">10</span>&amp;&amp;fanz_Step_Memory[lasti<span class="number">+1</span>][lastj]==<span class="number">1</span>))&#123;</span><br><span class="line">    <span class="comment">// 两块以上每次正确之后最多可以错两次</span></span><br><span class="line">    wrong_time=<span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> cur=lasti;</span><br><span class="line">    <span class="keyword">while</span> (cur&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[cur][lastj]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">     cur--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&gt;=<span class="number">0</span>) Weight[cur][lastj]+=<span class="number">10</span>;</span><br><span class="line">    cur=lasti;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[cur][lastj]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&lt;<span class="number">10</span>) Weight[cur][lastj]+=<span class="number">10</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 打过的点权值减到底，击中的话给上下左右的点增加权重</span></span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="comment">// 打过的点权值减到底，没击中的话给上下左右的点减少权重</span></span><br><span class="line">   <span class="comment">// Weight[lasti][lastj] -= 10000;</span></span><br><span class="line">   fanz_Step_Memory[lasti][lastj]=<span class="number">-1</span>;</span><br><span class="line">   wrong_time--;</span><br><span class="line">   <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(wrong_time==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="comment">//  destoryCenter();</span></span><br><span class="line">     small_i=small_i&lt;=<span class="number">0</span>?<span class="number">0</span>:small_i<span class="number">-1</span>;</span><br><span class="line">     small_j=small_j&lt;=<span class="number">0</span>?<span class="number">0</span>:small_j<span class="number">-1</span>;</span><br><span class="line">     big_i=big_i&gt;=<span class="number">9</span>?<span class="number">9</span>:big_i<span class="number">+1</span>;</span><br><span class="line">     big_j=big_j&gt;=<span class="number">9</span>?<span class="number">9</span>:big_j<span class="number">+1</span>;</span><br><span class="line">      <span class="comment">// 方圆一周的格子都不用遍历了</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> p=small_i;p&lt;=big_i;p++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> q=small_j;q&lt;=big_j;q++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(fanz_Step_Memory[p][q]==<span class="number">0</span>)</span><br><span class="line">            fanz_Step_Memory[p][q]=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      small_j=small_j=<span class="number">20</span>;</span><br><span class="line">      big_i=big_j=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 选择权重最大的点开火</span></span><br><span class="line"> max=<span class="number">-200</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; <span class="number">10</span>; l++) &#123;</span><br><span class="line">   <span class="keyword">if</span>(fanz_Step_Memory[k][l]==<span class="number">0</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span> (Weight[k][l] &gt; max) &#123;</span><br><span class="line">    max = Weight[k][l];</span><br><span class="line">    i = k;</span><br><span class="line">    j = l;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 向(i,j)位置开火</span></span><br><span class="line"> <span class="built_in">firetoB</span>(i, j);</span><br><span class="line"> flag = <span class="number">1</span>;</span><br><span class="line"> lasti = i;</span><br><span class="line"> lastj = j;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>保留2之后的权重,但是未命中的时候不减权重，胜率 80%，并没有明显升高</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;player.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;server.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> initial = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> researchButton = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">Informations</span> &#123;</span><br><span class="line">  <span class="comment">/* data */</span></span><br><span class="line">  <span class="type">int</span> hitNum;</span><br><span class="line">  <span class="type">int</span> optionS;</span><br><span class="line">  <span class="type">int</span> optionH;</span><br><span class="line">  <span class="type">int</span> last_Hit_Index[<span class="number">2</span>];</span><br><span class="line">  <span class="type">int</span> found[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">&#125; Information;</span><br><span class="line"></span><br><span class="line">Battlefield PlayerA_BF;</span><br><span class="line"><span class="type">char</span>* PlayerAName = <span class="string">&quot;fanzheng&quot;</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> fanz_Step_Memory[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 玩家部署舰艇</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">DeploymentA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line">      PlayerA_BF.area[i][j] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++) &#123;</span><br><span class="line">      Weight[i][j] = <span class="number">0</span>;</span><br><span class="line">      fanz_Step_Memory[i][j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">4</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">    Weight[<span class="number">4</span> - j][j] = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">9</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">    Weight[<span class="number">9</span> - j][j] = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">5</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">    Weight[<span class="number">14</span> - j][j] = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// add your arrangement, for example:</span></span><br><span class="line">  PlayerA_BF.area[<span class="number">0</span>][<span class="number">0</span>] = D;</span><br><span class="line">  PlayerA_BF.area[<span class="number">0</span>][<span class="number">1</span>] = D;</span><br><span class="line">  PlayerA_BF.area[<span class="number">2</span>][<span class="number">2</span>] = S;</span><br><span class="line">  PlayerA_BF.area[<span class="number">2</span>][<span class="number">3</span>] = S;</span><br><span class="line">  PlayerA_BF.area[<span class="number">2</span>][<span class="number">4</span>] = S;</span><br><span class="line">  PlayerA_BF.area[<span class="number">4</span>][<span class="number">4</span>] = C;</span><br><span class="line">  PlayerA_BF.area[<span class="number">4</span>][<span class="number">5</span>] = C;</span><br><span class="line">  PlayerA_BF.area[<span class="number">4</span>][<span class="number">6</span>] = C;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">5</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">6</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">7</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">8</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">2</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">3</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">4</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">5</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">6</span>] = A;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printBF</span>(&amp;PlayerA_BF);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">getAttack_Object_Index</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span>* attack;</span><br><span class="line">  <span class="keyword">return</span> attack;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lasti = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lastj = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> clean_num = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> small_i = <span class="number">20</span>, big_i = <span class="number">-1</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> small_j = <span class="number">20</span>, big_j = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getmax</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123; <span class="keyword">return</span> a &gt; b ? a : b; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getmin</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123; <span class="keyword">return</span> a &lt; b ? a : b; &#125;</span><br><span class="line"><span class="comment">// 根据上次是否击中确定策略，选择下一个攻击点</span></span><br><span class="line"><span class="comment">// 可以自己创建数据结构记录之前的击中与否信息</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">StrategyA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, max;</span><br><span class="line">  <span class="comment">// 从服务器端获取上次攻击是否击中信息</span></span><br><span class="line">  <span class="type">int</span> isHit = <span class="built_in">ALastHitB</span>();</span><br><span class="line">  <span class="keyword">if</span> (isHit == <span class="number">1</span>) &#123;</span><br><span class="line">    fanz_Step_Memory[lasti][lastj] = <span class="number">1</span>;</span><br><span class="line">    clean_num = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 这里如果击中点的四周也有击中点，就可以知道方向了</span></span><br><span class="line">    <span class="comment">// 水平方向</span></span><br><span class="line">    <span class="keyword">if</span> ((lastj &gt; <span class="number">0</span> &amp;&amp; fanz_Step_Memory[lasti][lastj - <span class="number">1</span>] == <span class="number">1</span>) ||</span><br><span class="line">        (lastj &lt; <span class="number">10</span> &amp;&amp; fanz_Step_Memory[lasti][lastj + <span class="number">1</span>] == <span class="number">1</span>)) &#123;</span><br><span class="line">      <span class="type">int</span> cur = lastj;</span><br><span class="line">      <span class="keyword">while</span> (cur &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fanz_Step_Memory[lasti][cur] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        cur--;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (cur &gt;= <span class="number">0</span>) Weight[lasti][cur] += <span class="number">10</span>;</span><br><span class="line">      cur = lastj;</span><br><span class="line">      <span class="keyword">while</span> (cur &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fanz_Step_Memory[lasti][cur] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        cur++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (cur &lt; <span class="number">10</span>) Weight[lasti][cur] += <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 竖直方向</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((lasti &gt; <span class="number">0</span> &amp;&amp; fanz_Step_Memory[lasti - <span class="number">1</span>][lastj] == <span class="number">1</span>) ||</span><br><span class="line">             (lasti &lt; <span class="number">10</span> &amp;&amp; fanz_Step_Memory[lasti + <span class="number">1</span>][lastj] == <span class="number">1</span>)) &#123;</span><br><span class="line">      <span class="type">int</span> cur = lasti;</span><br><span class="line">      <span class="keyword">while</span> (cur &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fanz_Step_Memory[cur][lastj] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        cur--;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (cur &gt;= <span class="number">0</span>) Weight[cur][lastj] += <span class="number">10</span>;</span><br><span class="line">      cur = lasti;</span><br><span class="line">      <span class="keyword">while</span> (cur &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fanz_Step_Memory[cur][lastj] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        cur++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (cur &lt; <span class="number">10</span>) Weight[cur][lastj] += <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 打过的点权值减到底，击中的话给上下左右的点增加权重</span></span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">2</span>][lastj] += <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">2</span>][lastj] += <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">2</span>] += <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">2</span>] += <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">3</span>][lastj] += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">3</span>][lastj] += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">3</span>] += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">3</span>] += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">4</span>][lastj] += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">4</span>][lastj] += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">4</span>] += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">4</span>] += <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 打过的点权值减到底，没击中的话给上下左右的点减少权重</span></span><br><span class="line">    <span class="comment">// Weight[lasti][lastj] -= 10000;</span></span><br><span class="line">    fanz_Step_Memory[lasti][lastj] = <span class="number">-1</span>;</span><br><span class="line">    clean_num++;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 选择权重最大的点开火</span></span><br><span class="line">  max = <span class="number">-200</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; <span class="number">10</span>; l++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fanz_Step_Memory[k][l] == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Weight[k][l] &gt; max) &#123;</span><br><span class="line">          max = Weight[k][l];</span><br><span class="line">          i = k;</span><br><span class="line">          j = l;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 向(i,j)位置开火</span></span><br><span class="line">  <span class="built_in">firetoB</span>(i, j);</span><br><span class="line">  flag = <span class="number">1</span>;</span><br><span class="line">  lasti = i;</span><br><span class="line">  lastj = j;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">destoryCenter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 打破每行连续安全区域的中间位置</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="type">int</span> start = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; start &lt; <span class="number">10</span>; start++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fanz_Step_Memory[i][start] == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> cur = start;</span><br><span class="line">        <span class="keyword">while</span> (cur &lt; <span class="number">10</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (fanz_Step_Memory[i][cur] != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">          cur++;</span><br><span class="line">        &#125;</span><br><span class="line">        Weight[i][(start + cur - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>] += <span class="number">2</span>;</span><br><span class="line">        start = cur;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 打破每列连续安全区域的中间位置</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="type">int</span> start = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; start &lt; <span class="number">10</span>; start++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fanz_Step_Memory[start][i] == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> cur = start;</span><br><span class="line">        <span class="keyword">while</span> (cur &lt; <span class="number">10</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (fanz_Step_Memory[cur][i] != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">          cur++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Weight[(start + cur - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>][i] += <span class="number">2</span>;</span><br><span class="line">        start = cur;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>保留2之后的权重，未命中的时候也减去权重，胜率83.33%</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;player.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;server.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> initial = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> researchButton = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">Informations</span> &#123;</span><br><span class="line">  <span class="comment">/* data */</span></span><br><span class="line">  <span class="type">int</span> hitNum;</span><br><span class="line">  <span class="type">int</span> optionS;</span><br><span class="line">  <span class="type">int</span> optionH;</span><br><span class="line">  <span class="type">int</span> last_Hit_Index[<span class="number">2</span>];</span><br><span class="line">  <span class="type">int</span> found[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">&#125; Information;</span><br><span class="line"></span><br><span class="line">Battlefield PlayerA_BF;</span><br><span class="line"><span class="type">char</span>* PlayerAName = <span class="string">&quot;fanzheng&quot;</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> fanz_Step_Memory[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 玩家部署舰艇</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">DeploymentA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line">      PlayerA_BF.area[i][j] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++) &#123;</span><br><span class="line">      Weight[i][j] = <span class="number">0</span>;</span><br><span class="line">      fanz_Step_Memory[i][j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">4</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">    Weight[<span class="number">4</span> - j][j] = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">9</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">    Weight[<span class="number">9</span> - j][j] = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">5</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">    Weight[<span class="number">14</span> - j][j] = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// add your arrangement, for example:</span></span><br><span class="line">  PlayerA_BF.area[<span class="number">0</span>][<span class="number">0</span>] = D;</span><br><span class="line">  PlayerA_BF.area[<span class="number">0</span>][<span class="number">1</span>] = D;</span><br><span class="line">  PlayerA_BF.area[<span class="number">2</span>][<span class="number">2</span>] = S;</span><br><span class="line">  PlayerA_BF.area[<span class="number">2</span>][<span class="number">3</span>] = S;</span><br><span class="line">  PlayerA_BF.area[<span class="number">2</span>][<span class="number">4</span>] = S;</span><br><span class="line">  PlayerA_BF.area[<span class="number">4</span>][<span class="number">4</span>] = C;</span><br><span class="line">  PlayerA_BF.area[<span class="number">4</span>][<span class="number">5</span>] = C;</span><br><span class="line">  PlayerA_BF.area[<span class="number">4</span>][<span class="number">6</span>] = C;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">5</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">6</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">7</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">6</span>][<span class="number">8</span>] = B;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">2</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">3</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">4</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">5</span>] = A;</span><br><span class="line">  PlayerA_BF.area[<span class="number">8</span>][<span class="number">6</span>] = A;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printBF</span>(&amp;PlayerA_BF);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">getAttack_Object_Index</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span>* attack;</span><br><span class="line">  <span class="keyword">return</span> attack;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lasti = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lastj = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> clean_num = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> small_i = <span class="number">20</span>, big_i = <span class="number">-1</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> small_j = <span class="number">20</span>, big_j = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getmax</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123; <span class="keyword">return</span> a &gt; b ? a : b; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getmin</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123; <span class="keyword">return</span> a &lt; b ? a : b; &#125;</span><br><span class="line"><span class="comment">// 根据上次是否击中确定策略，选择下一个攻击点</span></span><br><span class="line"><span class="comment">// 可以自己创建数据结构记录之前的击中与否信息</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">StrategyA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, max;</span><br><span class="line">  <span class="comment">// 从服务器端获取上次攻击是否击中信息</span></span><br><span class="line">  <span class="type">int</span> isHit = <span class="built_in">ALastHitB</span>();</span><br><span class="line">  <span class="keyword">if</span> (isHit == <span class="number">1</span>) &#123;</span><br><span class="line">    fanz_Step_Memory[lasti][lastj] = <span class="number">1</span>;</span><br><span class="line">    clean_num = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 这里如果击中点的四周也有击中点，就可以知道方向了</span></span><br><span class="line">    <span class="comment">// 水平方向</span></span><br><span class="line">    <span class="keyword">if</span> ((lastj &gt; <span class="number">0</span> &amp;&amp; fanz_Step_Memory[lasti][lastj - <span class="number">1</span>] == <span class="number">1</span>) ||</span><br><span class="line">        (lastj &lt; <span class="number">10</span> &amp;&amp; fanz_Step_Memory[lasti][lastj + <span class="number">1</span>] == <span class="number">1</span>)) &#123;</span><br><span class="line">      <span class="type">int</span> cur = lastj;</span><br><span class="line">      <span class="keyword">while</span> (cur &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fanz_Step_Memory[lasti][cur] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        cur--;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (cur &gt;= <span class="number">0</span>) Weight[lasti][cur] += <span class="number">10</span>;</span><br><span class="line">      cur = lastj;</span><br><span class="line">      <span class="keyword">while</span> (cur &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fanz_Step_Memory[lasti][cur] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        cur++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (cur &lt; <span class="number">10</span>) Weight[lasti][cur] += <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 竖直方向</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((lasti &gt; <span class="number">0</span> &amp;&amp; fanz_Step_Memory[lasti - <span class="number">1</span>][lastj] == <span class="number">1</span>) ||</span><br><span class="line">             (lasti &lt; <span class="number">10</span> &amp;&amp; fanz_Step_Memory[lasti + <span class="number">1</span>][lastj] == <span class="number">1</span>)) &#123;</span><br><span class="line">      <span class="type">int</span> cur = lasti;</span><br><span class="line">      <span class="keyword">while</span> (cur &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fanz_Step_Memory[cur][lastj] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        cur--;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (cur &gt;= <span class="number">0</span>) Weight[cur][lastj] += <span class="number">10</span>;</span><br><span class="line">      cur = lasti;</span><br><span class="line">      <span class="keyword">while</span> (cur &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fanz_Step_Memory[cur][lastj] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        cur++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (cur &lt; <span class="number">10</span>) Weight[cur][lastj] += <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 打过的点权值减到底，击中的话给上下左右的点增加权重</span></span><br><span class="line">      <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">      <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">2</span>][lastj] += <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">2</span>][lastj] += <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">2</span>] += <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">2</span>] += <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">3</span>][lastj] += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">3</span>][lastj] += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">3</span>] += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">3</span>] += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">4</span>][lastj] += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">4</span>][lastj] += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">4</span>] += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">4</span>] += <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 打过的点权值减到底，没击中的话给上下左右的点减少权重</span></span><br><span class="line">    <span class="comment">// Weight[lasti][lastj] -= 10000;</span></span><br><span class="line">    fanz_Step_Memory[lasti][lastj] = <span class="number">-1</span>;</span><br><span class="line">    clean_num++;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">2</span>][lastj] -= <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">2</span>][lastj] -= <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">2</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">2</span>] -= <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">2</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">2</span>] -= <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">3</span>][lastj] -= <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">3</span>][lastj] -= <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">3</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">3</span>] -= <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">3</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">3</span>] -= <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">4</span>][lastj] -= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">4</span>][lastj] -= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">4</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">4</span>] -= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">4</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">4</span>] -= <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 选择权重最大的点开火</span></span><br><span class="line">  max = <span class="number">-200</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; <span class="number">10</span>; l++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fanz_Step_Memory[k][l] == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Weight[k][l] &gt; max) &#123;</span><br><span class="line">          max = Weight[k][l];</span><br><span class="line">          i = k;</span><br><span class="line">          j = l;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 向(i,j)位置开火</span></span><br><span class="line">  <span class="built_in">firetoB</span>(i, j);</span><br><span class="line">  flag = <span class="number">1</span>;</span><br><span class="line">  lasti = i;</span><br><span class="line">  lastj = j;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">destoryCenter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 打破每行连续安全区域的中间位置</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="type">int</span> start = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; start &lt; <span class="number">10</span>; start++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fanz_Step_Memory[i][start] == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> cur = start;</span><br><span class="line">        <span class="keyword">while</span> (cur &lt; <span class="number">10</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (fanz_Step_Memory[i][cur] != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">          cur++;</span><br><span class="line">        &#125;</span><br><span class="line">        Weight[i][(start + cur - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>] += <span class="number">2</span>;</span><br><span class="line">        start = cur;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 打破每列连续安全区域的中间位置</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="type">int</span> start = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; start &lt; <span class="number">10</span>; start++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fanz_Step_Memory[start][i] == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> cur = start;</span><br><span class="line">        <span class="keyword">while</span> (cur &lt; <span class="number">10</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (fanz_Step_Memory[cur][i] != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">          cur++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Weight[(start + cur - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>][i] += <span class="number">2</span>;</span><br><span class="line">        start = cur;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>目前最成功也最稳定的方法，贪心权值+破坏中心区域</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;player.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;server.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> initial = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> researchButton = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">Informations</span> &#123;</span><br><span class="line"> <span class="comment">/* data */</span></span><br><span class="line"> <span class="type">int</span> hitNum;</span><br><span class="line"> <span class="type">int</span> optionS;</span><br><span class="line"> <span class="type">int</span> optionH;</span><br><span class="line"> <span class="type">int</span> last_Hit_Index[<span class="number">2</span>];</span><br><span class="line"> <span class="type">int</span> found[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">&#125; Information;</span><br><span class="line"></span><br><span class="line">Battlefield PlayerA_BF;</span><br><span class="line"><span class="type">char</span>* PlayerAName = <span class="string">&quot;fanzheng&quot;</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> fanz_Step_Memory[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 玩家部署舰艇</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">DeploymentA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line">   PlayerA_BF.area[i][j] = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++)</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++) &#123;</span><br><span class="line">   Weight[i][j] = <span class="number">0</span>;</span><br><span class="line">   fanz_Step_Memory[i][j]=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">4</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">  Weight[<span class="number">4</span>-j][j]=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">9</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">  Weight[<span class="number">9</span>-j][j]=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">5</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">  Weight[<span class="number">14</span>-j][j]=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// add your arrangement, for example:</span></span><br><span class="line"> PlayerA_BF.area[<span class="number">0</span>][<span class="number">0</span>] = D;</span><br><span class="line"> PlayerA_BF.area[<span class="number">0</span>][<span class="number">1</span>] = D;</span><br><span class="line"> PlayerA_BF.area[<span class="number">2</span>][<span class="number">2</span>] = S;</span><br><span class="line"> PlayerA_BF.area[<span class="number">2</span>][<span class="number">3</span>] = S;</span><br><span class="line"> PlayerA_BF.area[<span class="number">2</span>][<span class="number">4</span>] = S;</span><br><span class="line"> PlayerA_BF.area[<span class="number">4</span>][<span class="number">4</span>] = C;</span><br><span class="line"> PlayerA_BF.area[<span class="number">4</span>][<span class="number">5</span>] = C;</span><br><span class="line"> PlayerA_BF.area[<span class="number">4</span>][<span class="number">6</span>] = C;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">5</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">6</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">7</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">6</span>][<span class="number">8</span>] = B;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">2</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">3</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">4</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">5</span>] = A;</span><br><span class="line"> PlayerA_BF.area[<span class="number">8</span>][<span class="number">6</span>] = A;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">printBF</span>(&amp;PlayerA_BF);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">getAttack_Object_Index</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="type">int</span>* attack;</span><br><span class="line"> <span class="keyword">return</span> attack;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lasti = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> lastj = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Weight[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> wrong_num=<span class="number">-10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据上次是否击中确定策略，选择下一个攻击点</span></span><br><span class="line"><span class="comment">// 可以自己创建数据结构记录之前的击中与否信息</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">StrategyA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, max;</span><br><span class="line"> <span class="comment">// 从服务器端获取上次攻击是否击中信息</span></span><br><span class="line"> <span class="type">int</span> isHit = <span class="built_in">ALastHitB</span>();</span><br><span class="line"> <span class="keyword">if</span> (flag != <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (isHit == <span class="number">1</span>) &#123;</span><br><span class="line">   fanz_Step_Memory[lasti][lastj]=<span class="number">1</span>;</span><br><span class="line">   <span class="comment">// 这里如果击中点的四周也有击中点，就可以知道方向了</span></span><br><span class="line">   <span class="comment">// 水平方向</span></span><br><span class="line">   <span class="keyword">if</span>((lastj&gt;<span class="number">0</span>&amp;&amp;fanz_Step_Memory[lasti][lastj<span class="number">-1</span>]==<span class="number">1</span>)||(lastj&lt;<span class="number">10</span>&amp;&amp;fanz_Step_Memory[lasti][lastj<span class="number">+1</span>]==<span class="number">1</span>))&#123;</span><br><span class="line">    wrong_num==<span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> cur=lastj;</span><br><span class="line">    <span class="keyword">while</span> (cur&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[lasti][cur]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">     cur--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&gt;=<span class="number">0</span>) Weight[lasti][cur]+=<span class="number">10</span>;</span><br><span class="line">    cur=lastj;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[lasti][cur]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&lt;<span class="number">10</span>) Weight[lasti][cur]+=<span class="number">10</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 竖直方向</span></span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>((lasti&gt;<span class="number">0</span>&amp;&amp;fanz_Step_Memory[lasti<span class="number">-1</span>][lastj]==<span class="number">1</span>)||(lasti&lt;<span class="number">10</span>&amp;&amp;fanz_Step_Memory[lasti<span class="number">+1</span>][lastj]==<span class="number">1</span>))&#123;</span><br><span class="line">    wrong_num=<span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> cur=lasti;</span><br><span class="line">    <span class="keyword">while</span> (cur&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[cur][lastj]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">     cur--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&gt;=<span class="number">0</span>) Weight[cur][lastj]+=<span class="number">10</span>;</span><br><span class="line">    cur=lasti;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[cur][lastj]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur&lt;<span class="number">10</span>) Weight[cur][lastj]+=<span class="number">10</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 打过的点权值减到底，击中的话给上下左右的点增加权重</span></span><br><span class="line">    <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="comment">// 打过的点权值减到底，没击中的话给上下左右的点减少权重</span></span><br><span class="line">   fanz_Step_Memory[lasti][lastj]=<span class="number">-1</span>;</span><br><span class="line">   wrong_num--;</span><br><span class="line">   <span class="keyword">if</span> (lasti + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti + <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">if</span> (lasti - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti - <span class="number">1</span>][lastj] -= <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">if</span> (lastj + <span class="number">1</span> &lt; <span class="number">10</span>) Weight[lasti][lastj + <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">if</span> (lastj - <span class="number">1</span> &gt;= <span class="number">0</span>) Weight[lasti][lastj - <span class="number">1</span>] -= <span class="number">5</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(wrong_num==<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="built_in">destoryCenter</span>();</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">// 选择权重最大的点开火</span></span><br><span class="line"> max=<span class="number">-200</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; <span class="number">10</span>; l++) &#123;</span><br><span class="line">   <span class="keyword">if</span>(fanz_Step_Memory[k][l]==<span class="number">0</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span> (Weight[k][l] &gt; max) &#123;</span><br><span class="line">    max = Weight[k][l];</span><br><span class="line">    i = k;</span><br><span class="line">    j = l;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 向(i,j)位置开火</span></span><br><span class="line"> <span class="built_in">firetoB</span>(i, j);</span><br><span class="line"> flag = <span class="number">1</span>;</span><br><span class="line"> lasti = i;</span><br><span class="line"> lastj = j;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">destoryCenter</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="comment">// 打破每行连续安全区域的中间位置</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">  <span class="type">int</span> start=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(;start&lt;<span class="number">10</span>;start++)&#123;</span><br><span class="line">   <span class="keyword">if</span>(fanz_Step_Memory[i][start]==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> cur=start;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[i][cur]!=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    Weight[i][(start+cur<span class="number">-1</span>)&gt;&gt;<span class="number">1</span>]+=<span class="number">4</span>;</span><br><span class="line">    start=cur;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 打破每列连续安全区域的中间位置</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">  <span class="type">int</span> start=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(;start&lt;<span class="number">10</span>;start++)&#123;</span><br><span class="line">   <span class="keyword">if</span>(fanz_Step_Memory[start][i]==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> cur=start;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[cur][i]!=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Weight[(start+cur<span class="number">-1</span>)&gt;&gt;<span class="number">1</span>][i]+=<span class="number">4</span>;</span><br><span class="line">    start=cur;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">PlayerA_BF.area[<span class="number">4</span>][<span class="number">4</span>] = D;</span><br><span class="line">PlayerA_BF.area[<span class="number">4</span>][<span class="number">5</span>] = D;</span><br><span class="line">PlayerA_BF.area[<span class="number">9</span>][<span class="number">0</span>] = S;</span><br><span class="line">PlayerA_BF.area[<span class="number">9</span>][<span class="number">1</span>] = S;</span><br><span class="line">PlayerA_BF.area[<span class="number">9</span>][<span class="number">2</span>] = S;</span><br><span class="line">PlayerA_BF.area[<span class="number">0</span>][<span class="number">7</span>] = C;</span><br><span class="line">PlayerA_BF.area[<span class="number">0</span>][<span class="number">8</span>] = C;</span><br><span class="line">PlayerA_BF.area[<span class="number">0</span>][<span class="number">9</span>] = C;</span><br><span class="line">PlayerA_BF.area[<span class="number">0</span>][<span class="number">0</span>] = B;</span><br><span class="line">PlayerA_BF.area[<span class="number">1</span>][<span class="number">0</span>] = B;</span><br><span class="line">PlayerA_BF.area[<span class="number">2</span>][<span class="number">0</span>] = B;</span><br><span class="line">PlayerA_BF.area[<span class="number">3</span>][<span class="number">0</span>] = B;</span><br><span class="line">PlayerA_BF.area[<span class="number">5</span>][<span class="number">9</span>] = A;</span><br><span class="line">PlayerA_BF.area[<span class="number">6</span>][<span class="number">9</span>] = A;</span><br><span class="line">PlayerA_BF.area[<span class="number">7</span>][<span class="number">9</span>] = A;</span><br><span class="line">PlayerA_BF.area[<span class="number">8</span>][<span class="number">9</span>] = A;</span><br><span class="line">PlayerA_BF.area[<span class="number">9</span>][<span class="number">9</span>] = A;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>SeaBattle</category>
      </categories>
      <tags>
        <tag>海战游戏</tag>
        <tag>策略</tag>
      </tags>
  </entry>
  <entry>
    <title>海战游戏心得</title>
    <url>/sni30q/</url>
    <content><![CDATA[<h2 id="攻击策略"><a class="markdownIt-Anchor" href="#攻击策略"></a> 攻击策略</h2>
<h3 id="1简单贪心策略"><a class="markdownIt-Anchor" href="#1简单贪心策略"></a> 1.简单贪心策略</h3>
<p>最早的这个攻击策略比较暴力，主要考虑的是如果打中了某个船艇，那么就继续攻击邻近区域，直到将这整艘船艇全部击倒为止。</p>
<h4 id="11-策略思想"><a class="markdownIt-Anchor" href="#11-策略思想"></a> 1.1 策略思想</h4>
<ul>
<li>如果成功击中敌方船艇，那么击中位置的附近位置出现船艇的概率增大；</li>
<li>如果没有成功击中敌方船艇，那么击中位置的附近位置出现船艇的概率减小；</li>
</ul>
<h4 id="12-策略实现"><a class="markdownIt-Anchor" href="#12-策略实现"></a> 1.2 策略实现</h4>
<p>使用一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10</mn><mo>×</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">10\times10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>的权值数组<code>Weight[10][10]</code>，这里的权值就是击中位置出现船艇的概率。我们每次都遍历整个数组，每次都选择权值最大的位置作为击打位置。</p>
<h5 id="初始化-weight"><a class="markdownIt-Anchor" href="#初始化-weight"></a> 初始化 Weight</h5>
<p><code>Weight[10][10]</code>初始化如下：<br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241104124920.png"
                      alt="image.png" 
                ><br />
这样初始化的目的是，<strong>保证在打完全部的初始化位置时，至少能打中一艘长度为 5 的大船艇</strong>。</p>
<h5 id="击中未击中"><a class="markdownIt-Anchor" href="#击中未击中"></a> 击中/未击中</h5>
<p>如果击中，就提升击中位置附近位置的权值。<strong>由于船艇的长度最大为 5，所以就以 5 为范围由近到远递减增加权值。因为刚才的假设中是认为击中位置的附近更容易再次出现船艇，所以离击中位置越近的位置权值就越高。</strong><br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/f0b03a3b950e818294565068faed42b.jpg"
                      alt="f0b03a3b950e818294565068faed42b.jpg|424" 
                ><br />
如果未击中，那么就相应的减去权值。<strong>这里的减权值操作比较暴力，考虑到的条件也不是很多。</strong><br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/9e8d4a03532bc59a35503b6e30f8c97.jpg"
                      alt="9e8d4a03532bc59a35503b6e30f8c97.jpg|388" 
                ><br />
当然每次击中的位置都需要记录，这里标记的做法是直接将击中位置的权值<code>Weight[i][j]-=10000</code>，因为棋盘的大小就只有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10</mn><mo>×</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">10\times10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>，而每次我们都选择的是权值最大的位置，所以这样是可以有效标记已击中位置的。</p>
<h4 id="13-策略结果"><a class="markdownIt-Anchor" href="#13-策略结果"></a> 1.3 策略结果</h4>
<p>这个策略最终取得了不错的胜率，不过策略中对未击中之后的位置选取考虑的不多，我个人感觉能取得这个胜率的原因可能是大家部署的<strong>船艇之间比较接近或者船艇的上下左右几个方向刚好可以直达另一搜船</strong>。<br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241104145908.png"
                      alt="image.png" 
                ></p>
<h3 id="2贪心优化破坏中心点策略"><a class="markdownIt-Anchor" href="#2贪心优化破坏中心点策略"></a> 2.贪心优化+破坏中心点策略</h3>
<h4 id="21-策略思想"><a class="markdownIt-Anchor" href="#21-策略思想"></a> 2.1 策略思想</h4>
<p>上面这个策略在击中某个位置的时候，会同时改变单位长度为5的所有位置的权值。可是，如果只是想尽快击溃某一条船的全部位置，<strong>其实只需要改变单位为1的位置的权值也能做到</strong>。<br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/967f4887d3a027cd81d90f623f8cb07.jpg"
                      alt="967f4887d3a027cd81d90f623f8cb07.jpg|513" 
                ><br />
如图所示，击中任意一个位置之后，其上下左右必然存在另一个可击中点（<strong>船艇长度最小也为2</strong>），那么当拥有两个相邻击中点之后，我们就已经可以判定出该船艇摆放的方向，之后只在这个方向的两个端点专门攻击即可。</p>
<p>因为船艇的长度最小为2，所以相邻两个击中点的情况是一定会出现的！这么做不仅可以尽快的击溃某一艘船，同时还可以起到标记效果。<strong>由于我们在判定船艇方向之后只需要对两端点发起攻击，所以只要出现连续两次未击中的情况，就说明有一艘船艇已经被完全击溃了</strong>。</p>
<p>但是这样又会导致另一个问题：<strong>击溃一艘船艇之后又该打哪里？</strong> 刚才的策略中虽然半径为5的权值改变策略比较暴力，但是每次至少都有一个最大权值位置可以打（虽说可能不准）；现在这种做法击溃了一艘船艇之后对这艘船艇周围的权值影响的太少了，很多位置的权值几乎都一样，到底打哪？</p>
<p>这里我想到的策略是<strong>破坏中心点</strong>。在每行每列一定存在很多没有被击打的位置，这里简称之为 <strong>和平区域</strong>。对于每一行每一列的连续和平区，优先攻击中间位置。（类似二分法）</p>
<h4 id="22-策略实现"><a class="markdownIt-Anchor" href="#22-策略实现"></a> 2.2 策略实现</h4>
<h5 id="初始化"><a class="markdownIt-Anchor" href="#初始化"></a> 初始化</h5>
<p>还是使用一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10</mn><mo>×</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">10\times10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>的矩阵<code>Weight[10][10]</code>记录权值，这里为避免混淆，增加一个<code>stepMemory[10][10]</code>记录未知状态。对于成功命中的位置，<code>stepMemory[i][j]=1</code>；对于未成功命中的位置，<code>stepMemory[i][j]=-1</code>；对于和平区域，<code>stepMemory[i][j]=0</code>。<br />
这里如果某位置成功命中，那么只有其距离为1的上下左右四个位置的权值+5；同样的，如果没有命中，也只有其距离为1的上下左右四个位置的权值-5。我们每次依旧选择权值最大的位置。</p>
<h5 id="船艇方向判定"><a class="markdownIt-Anchor" href="#船艇方向判定"></a> 船艇方向判定</h5>
<p>这里在判定方向的时候增加了一个 <code>wrong_num</code>，刚才说了<strong>只要出现连续两次未击中的情况，就说明有一艘船艇已经被完全击溃了</strong>，所以当有两次连续击中的时候，就将 <code>wrong_num=2</code>。当<code>wrong_num=0</code>时，就可以破坏中心点了。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这里如果击中点的四周也有击中点，就可以知道方向了</span></span><br><span class="line">  <span class="comment">// 水平方向</span></span><br><span class="line">  <span class="keyword">if</span>((lastj&gt;<span class="number">0</span>&amp;&amp;fanz_Step_Memory[lasti][lastj<span class="number">-1</span>]==<span class="number">1</span>)||(lastj&lt;<span class="number">10</span>&amp;&amp;fanz_Step_Memory[lasti][lastj<span class="number">+1</span>]==<span class="number">1</span>))&#123;</span><br><span class="line">   wrong_num==<span class="number">2</span>;</span><br><span class="line">   <span class="type">int</span> cur=lastj;</span><br><span class="line">   <span class="keyword">while</span> (cur&gt;=<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span>(fanz_Step_Memory[lasti][cur]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">    cur--;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cur&gt;=<span class="number">0</span>) Weight[lasti][cur]+=<span class="number">10</span>;</span><br><span class="line">   cur=lastj;</span><br><span class="line">   <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span>(fanz_Step_Memory[lasti][cur]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    cur++;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cur&lt;<span class="number">10</span>) Weight[lasti][cur]+=<span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 竖直方向</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>((lasti&gt;<span class="number">0</span>&amp;&amp;fanz_Step_Memory[lasti<span class="number">-1</span>][lastj]==<span class="number">1</span>)||(lasti&lt;<span class="number">10</span>&amp;&amp;fanz_Step_Memory[lasti<span class="number">+1</span>][lastj]==<span class="number">1</span>))&#123;</span><br><span class="line">   wrong_num=<span class="number">2</span>;</span><br><span class="line">   <span class="type">int</span> cur=lasti;</span><br><span class="line">   <span class="keyword">while</span> (cur&gt;=<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span>(fanz_Step_Memory[cur][lastj]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">    cur--;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cur&gt;=<span class="number">0</span>) Weight[cur][lastj]+=<span class="number">10</span>;</span><br><span class="line">   cur=lasti;</span><br><span class="line">   <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span>(fanz_Step_Memory[cur][lastj]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    cur++;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cur&lt;<span class="number">10</span>) Weight[cur][lastj]+=<span class="number">10</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div>
<h5 id="破坏中心点实现"><a class="markdownIt-Anchor" href="#破坏中心点实现"></a> 破坏中心点实现</h5>
<p>这里使用窗口对每一行每一列的连续和平区域的中心点进行破坏，当<code>wrong_num=0</code>时就执行这段代码。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">destoryCenter</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="comment">// 打破每行连续安全区域的中间位置</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">  <span class="type">int</span> start=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(;start&lt;<span class="number">10</span>;start++)&#123;</span><br><span class="line">   <span class="keyword">if</span>(fanz_Step_Memory[i][start]==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> cur=start;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[i][cur]!=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    Weight[i][(start+cur<span class="number">-1</span>)&gt;&gt;<span class="number">1</span>]+=<span class="number">4</span>;</span><br><span class="line">    start=cur;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 打破每列连续安全区域的中间位置</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">  <span class="type">int</span> start=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(;start&lt;<span class="number">10</span>;start++)&#123;</span><br><span class="line">   <span class="keyword">if</span>(fanz_Step_Memory[start][i]==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> cur=start;</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span>(fanz_Step_Memory[cur][i]!=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     cur++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Weight[(start+cur<span class="number">-1</span>)&gt;&gt;<span class="number">1</span>][i]+=<span class="number">4</span>;</span><br><span class="line">    start=cur;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h4 id="23-策略结果"><a class="markdownIt-Anchor" href="#23-策略结果"></a> 2.3 策略结果</h4>
<p>这里测试的环境是Ubuntu，如果每次都把所有playerA和playerB的代码都执行一次需要花费半小时以上，所以这里我测试的时候在 <code>seabattle.py</code>的读取文件方法中限制了自己的学号，这样playerA就只有我一个人，比较省时。<br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241104155443.png"
                      alt="image.png" 
                ></p>
<h5 id="如果不加入破坏中心点操作"><a class="markdownIt-Anchor" href="#如果不加入破坏中心点操作"></a> 如果不加入&quot;破坏中心点&quot;操作</h5>
<p>这里测试十次，发现了这两种结果。相比于之前的结果，胜率虽然上来了，但是总共战斗的场数却减少了。而且在测试的时候发现存在超时情况。超时原因很可能就是在不破坏中心点的情况下，击败一艘船之后难以定位下一个攻击位置。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Time out: 2024220603019_fanzheng 2024220603008_chenhaojie</span><br><span class="line">Time out: 2024220603019_fanzheng 2024220603042_jinyu</span><br><span class="line">Time out: 2024220603019_fanzheng 2024220603118_zhuokai</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241104110129.png"
                      alt="image.png|451" 
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241104103345.png"
                      alt="image.png|450" 
                ></p>
<h5 id="加入破坏中心点操作"><a class="markdownIt-Anchor" href="#加入破坏中心点操作"></a> 加入&quot;破坏中心点&quot;操作</h5>
<p>这里也测试10次，结果稳定不变，保持下图结果。这里的胜率相较于上面可能显得低了点，但是总场数增加了，总积分更高，而且执行过程中没有出现超时情况，运行结果也很稳定。<br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241104105900.png"
                      alt="image.png" 
                ></p>
<h2 id="防守策略"><a class="markdownIt-Anchor" href="#防守策略"></a> 防守策略</h2>
<p>关于防守策略我想的不是很多，最开始我想的摆法是这样的：<br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241104160947.png"
                      alt="image.png" 
                ><br />
我最开始的想法是希望五艘船尽可能的处在不同的位置，并且距离尽可能选一些。但是每个人的攻击策略是不一样的，如果有人喜欢先攻击四个对角，那么我会很快损失4艘船。<br />
(更新 11/05): 改成上述部署方式，使用贪心+破坏中心点策略的结果：<br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241105123340.png"
                      alt="image.png" 
                ></p>
<p>所以思来想去我也想不到太好的摆法，下图就是我的摆法：<br />
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241104161204.png"
                      alt="image.png" 
                ></p>
]]></content>
      <categories>
        <category>SeaBattle</category>
      </categories>
      <tags>
        <tag>海战游戏</tag>
        <tag>策略</tag>
      </tags>
  </entry>
  <entry>
    <title>UAV-Aided Computation Offloading in Mobile-Edge Computing Networks_ A Stackelberg Game Approach</title>
    <url>/sni2ya/</url>
    <content><![CDATA[<blockquote>
<p>[!note]<br>
基于斯塔克伯格博弈方法，在无人机辅助的移动边缘计算网络中实现有效的计算任务卸载。</p>
<p><strong>计算卸载</strong>是指将移动设备上的计算任务转移到网络中的其他计算能力更强的节点（如边缘服务器）上进行处理的过程。无人机在这里的作用可能是作为移动的边缘服务器，或者作为中继节点，帮助将计算任务从用户设备卸载到更远的服务器。</p>
</blockquote>
<p>无人机（UAVs）被认为是为移动用户（MUs）提供额外计算能力和广泛覆盖的一种有前景的方法，特别是当 MUs 不在基础设施的通信范围内时。在本文中，研究了一个包括一个 UAV-MEC 服务器、一个 BS-MEC 服务器和多个 MUs 的 UAV 辅助移动边缘计算（MEC）网络，用于计算卸载，其中边缘服务提供商（ESP）管理两种服务器。考虑到 MUs 有大量计算任务需要执行，而 ESP 拥有空闲的计算资源。MUs 可以选择将他们的任务卸载到 ESP 以减轻压力和成本，ESP 可以通过出售计算资源来获得利润。</p>
<p><strong>ESP 和 MUs 之间的互动被建模为斯塔克伯格博弈</strong>，双方都希望最大化自己的效用。使用逆向归纳法分析了所提出的博弈，并证明了游戏中可以实现唯一的<strong>纳什均衡</strong>。然后，提出了一种<strong>基于梯度的动态迭代搜索算法（GDISA）</strong> 来获得近似最优解。最后，通过广泛的模拟验证了 GDISA 的有效性，结果表明 GDISA 在不同场景下的表现优于其他基准方法。</p>
<blockquote>
<p>[!note]<br>
这里不用关心无人机的作用是什么，其实只需要知道 <strong>服务提供商</strong> 和 <strong>移动用户</strong>（MUs)，用户需要使用商家的服务来降低自己这边的计算任务压力，商家需要尽可能的售卖空闲计算资源以牟取利润。</p>
</blockquote>
<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2>
<p>随着物联网（IoT）技术的发展，各种 IoT 设备可以相互协作，实现万物互联的目标[1]，[2]。与此同时，随着 IoT 设备的普及和技术的进步，IoT 已经为计算密集型功能开辟了许多应用领域，例如智能交通系统、智能医疗、在线互动游戏等[3]，[4]。然而，由于能耗和计算资源的限制，当前的 IoT 设备不可避免地无法支持这些计算密集型应用[5]，[6]。</p>
<p>为了提高设备的计算能力，移动云计算（MCC）已成为一种有前景的方式。<strong>计算任务被卸载到资源丰富的云数据中心执行，从而克服了设备的存储容量和计算资源的限制</strong>[7]，[8]。然而，对于某些延迟敏感的 IoT 服务来说，MCC 并不理想，因为云处理中的长传输距离导致了额外的传输成本和延迟。<strong>最近，移动边缘计算（MEC）已成为处理计算密集型任务的 5G 架构的关键组成部分</strong>[9]，[10]。<strong>通过设置 MEC 服务器，移动用户（MUs）的工作负载可以迁移到附近的边缘服务器，同时提高设备的服务质量（QoS）并显著降低能耗和延迟</strong>[11]，[12]。然而，MEC 可能不适用于某些基础设施有限的通信场景，例如紧急救援、军事演习、灾难响应等。在这些情况下，许多地面通信设施可能由于这些原因而损坏，因此无法提供通信和计算服务。</p>
<p>幸运的是，无人机（UAV）可以用来协助 MEC 进行通信和计算，这已成为应对这一挑战的关键技术之一[13]。因此，本文引入了一个 UAV 辅助的 MEC 系统，在这个系统中，多个 MUs 位于基站的覆盖区域内，每个基站都配备了一个<strong>边缘服务器（例如，BS-MEC 服务器）</strong>。MUs 可以本地执行他们的任务，或者将它们卸载到 BS-MEC 服务器。假设由于某些原因（如自然灾害或军事攻击）一个基站失败。在这种情况下，<strong>受损的 BS-MEC 服务器可能长时间无法提供服务</strong>，因此一些受影响的 MUs 将继续在目标区域搜索蜂窝信号。这不可避免地增加了未受损 BS-MEC 服务器的压力。因此，<strong>本文引入了一个飞行的 UAV（即，UAV-MEC 服务器），它具有通信和计算能力，以为这些受影响的 MUs 提供服务，并分担未受损 BS-MEC 服务器的压力</strong>，直到部署新的 BS-MEC 服务器为止。此外，<strong>引入了边缘服务提供商（ESP）来管理 BS-MEC 和 UAV-MEC 服务器</strong>。</p>
<p>目前，一些研究已经研究了 UAV 辅助 MEC 系统中的计算卸载。他们的目标大多是改善系统的 QoS（例如，成本、延迟、能耗等）。然而，任务卸载的过程将不可避免地消耗一些通信和计算资源。从经济角度来看，考虑到 <strong>ESP 是自私和理性的，如果没有补偿，它将不会参与任务卸载过程</strong>。因此，迫切需要<strong>开发激励机制来激励 ESP 参与任务卸载过程</strong>[14]，[15]。 幸运的是，博弈论可以用来模拟自私和独立参与者之间的互动过程，以便所有参与游戏的参与者都能获得最大奖励。特别是，可以通过斯塔克伯格博弈来研究个体理性参与者之间的竞争和合作，其中参与者被分为领导者和追随者。然而，据我们所知，UAV 辅助 MEC 系统中斯塔克伯格博弈的设计尚未得到很好的研究。本文考虑了 <strong>MUs 有一些任务需要执行，ESP 拥有空闲的计算资源。MUs 可以选择将任务卸载到 ESP 以减轻他们的压力和成本，而 ESP 可以通过出售闲置计算资源来获得利润</strong>。特别是，ESP 和 MUs 之间的互动过程通过斯塔克伯格博弈进行建模，<strong>其中 ESP 是领导者，MUs 是追随者</strong>。然后，本文提出了一种基于梯度的算法来获得近似最优解，以最大化 ESP 和 MUs 的效用。主要贡献如下：<br>
1）我们研究了一个重要的计算卸载问题，即在 UAV 辅助的移动边缘网络场景中，有一个 UAV-MEC 服务器，一个 BS-MEC 服务器和多个 MUs，其中 ESP 管理两种服务器。<br>
2）我们使用斯塔克伯格博弈来建模 ESP 和 MUs 之间的互动过程，其中 ESP 是领导者，MUs 是追随者。优化目标是最大化 ESP 和 MUs 的效用。<br>
3）我们使用逆向归纳法分析所提出的斯塔克伯格博弈，并证明了 ESP 和 MUs 之间存在唯一的纳什均衡。接下来，设计了一种基于梯度的动态迭代搜索算法（GDISA）来获得近似最优解。<br>
4）通过广泛的模拟评估了所提出的模型和算法的有效性。</p>
<p>本文的其余部分如下介绍。第 II 节回顾了相关工作，第 III 节介绍了系统模型。然后，在第 IV 节中描述和分析了所提出的博弈问题。第 V 节提出了所提出的算法。第 VI 节评估和分析了 GDISA 的性能。在第 VIII 节中，本文得出结论。</p>
<blockquote>
<p>[!note]<br>
现在可以知道无人机UAV起到的作用，原本地面上的是BS-MEC服务器，如果某个BS-MEC服务器因为军事或者自然原因损坏，那么可以启动无人机作为一个临时的服务器，知道损坏的BS-MEC修好。<br>
不过这些不是很关键，关键的是需要一个策略，一方面在激发ESP提供服务的时候保证其获利；另一方面尽可能的降低MUs购买计算资源的成本。这里使用的就是stackelberg博弈解决问题，并且使用基于梯度的动态迭代搜索算法获取近似解。</p>
</blockquote>
<h2 id="relate-works"><a class="markdownIt-Anchor" href="#relate-works"></a> Relate Works</h2>
<p><strong>相关工作</strong></p>
<p>A. 移动边缘计算中的计算卸载</p>
<p>最近，移动边缘计算（MEC）中的计算卸载研究受到了广泛的关注，包括学术界和工业界。它们中的大多数目标是减少延迟[16]，[17]，[18]，减少能耗[19]，[20]，或平衡能耗和延迟之间的权衡[21]，[22]。Feng等人[17]提出了一种基于车辆边缘计算的反向卸载框架，通过充分利用车辆计算资源进一步降低系统延迟。Chen等人[19]构建了一个节能资源分配方案，同时考虑了延迟、信道质量和传输功率的约束，旨在最小化任务卸载的能耗。Zhou等人[22]考虑了基于边缘计算的智能电网中的优化问题，目标是最小化任务成本，即时间和能耗消耗的加权和。</p>
<p>B. 无人机辅助的边缘计算</p>
<p>无人机已经在不同领域得到广泛应用，特别是协助地面通信和计算。实际上，通过使用无人机作为空中基站，这是增强现有通信系统覆盖范围和工作效率的有前途的方法[23]。Vamvakas等人[24]引入了一个框架，其中无人机被用作基站，以补充宏基站，并为MUs提供高效且无干扰的通信。Zhang等人[25]研究了无人机的比特分配、时间分配、功率分配和轨迹设计，目标是最小化无人机的总能耗。Liu等人[26]通过联合优化无人机的CPU频率、负载卸载、传输功率和轨迹，最小化了无人机的能耗。一些研究考虑了由无人机支持的MEC系统。Yu等人[27]联合优化了无人机的位置、通信和计算资源分配，以最小化MUs的服务延迟加权和和无人机的能耗。Han等人[28]开发了一个由无人机辅助的MEC系统，其中无人机从MUs收集数据，然后将其传输到基于MEC的接入点进行计算。Liu等人[29]提出了一个基于无人机的协作MEC网络架构，其中无人机可以相互协助执行计算任务，并开发了一个优化问题，以实现最佳的计算资源分配和计算卸载策略。通常，卸载任务的时间限制和能耗将成为UAV辅助MEC系统中的一个挑战性问题。Zhou等人[30]研究了在UAV辅助MEC无线电源系统中的计算速率最大化问题，考虑了能量收集的因果性和无人机速度约束。Zhang等人[31]考虑了MUs和无人机的平均加权能耗，并研究了资源分配、计算卸载和飞行轨迹调度的联合优化问题。为了最小化卸载任务的延迟，Cao等人[32]研究了联合无人机轨迹调度和计算卸载问题。</p>
<p>C. 博弈论</p>
<p>几种基于经济理论的方法已经被应用于激励各方参与计算卸载过程[33]。特别是，由于参与者需要被鼓励相互合作以实现他们的目标，我们可以使用博弈论来分析自私和独立实体之间的互动[34]。Zhang等人[35]开发了一种基于博弈论的解决方案，以最小化UAV辅助MEC系统中能耗和延迟的加权成本。Messous等人[36]考虑了将无人机的任务卸载到远程边缘服务器，然后提出了一个非合作博弈来解决能耗、延迟和成本之间的最佳权衡。Zhao等人[37]提出了一个无人机辅助车辆计算卸载优化框架，并将卸载决策问题表述为多人顺序博弈，以最小化系统成本。此外，可以通过使用斯塔克伯格博弈来研究理性参与者之间的合作和冲突。Zeng等人[38]提出了一个志愿者辅助车辆边缘计算模型和基于斯塔克伯格博弈的方法，以最大化志愿者车辆的奖励。Chang和Wei[39]提出了一种基于斯塔克伯格博弈的方法来研究边缘服务器的效用最大化问题和云的最优定价。为了最大化云服务器和边缘服务器的效用，我们之前的工作[40]提出了一种基于斯塔克伯格博弈的计算卸载方法在云边缘网络中。与现有研究相比，在我们的场景中，我们考虑MUs有一些计算任务需要卸载到ESP，其中ESP管理UAV-MEC服务器和BS-MEC服务器。我们使用斯塔克伯格博弈来建模ESP和MUs之间的互动过程，目标是最大化ESP和MUs的效用，其中ESP是领导者，MUs是追随者。此外，还考虑了计算任务的执行时间限制和无人机的能耗。</p>
<h2 id="system-model"><a class="markdownIt-Anchor" href="#system-model"></a> System Model</h2>
<p><strong>系统模型</strong></p>
<p>本文考虑了一个用于计算卸载的UAV辅助MEC网络。图1显示了系统模型，其中包括一个UAV-MEC服务器、一个BS-MEC服务器和N个MUs，UAV-MEC和BS-MEC服务器由ESP管理。每个MU需要执行延迟敏感和计算密集型任务，这些资源受限的MU可以选择将计算任务卸载到ESP以减轻他们的负担。然后，ESP将收取相应的费用以确保自己的利益。Hi ≜ {Li, Bi, tmax i }用于表示由MU i ∈ {1, 2, …, N}生成的任务，<strong>其中Li表示任务Hi的大小，Bi表示完成Hi所需的总CPU周期数，tmax i 表示Hi的时间约束。</strong> 类似于[41]，不同类型的应用程序可能需要不同数量的CPU周期来计算。因此，我们引入了一个复杂性因子ai来衡量计算MU i任务的每比特所需的CPU周期数。卸载的计算任务部分可以表示为hi = {li, bi, tmax i }，<strong>其中li是卸载到ESP的部分任务的大小，bi是卸载部分任务所需的CPU周期数。</strong> 同样，tmax i 表示卸载部分任务的时间约束。因此，基于复杂性因子ai，我们可以得到bi = ai · li，其中li ∈ [0, Li]且bi ∈ [0, Bi]。为了便于阅读，使用的符号及其相应解释列在表I中。</p>
<p><strong>A. 通信模型</strong></p>
<p>在该场景中，如果MU i决定将其任务卸载到BS-MEC服务器，传输速率表示为RB i ，如果MU i决定将其任务卸载到UAV-MEC服务器，传输速率表示为RU i 。因此，RB i 可以定义为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>B</mi><mi>i</mi><mo>=</mo><mi>W</mi><mi>B</mi><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mfrac><mrow><mi>P</mi><mi>i</mi><mi>G</mi><mi>B</mi><mi>i</mi></mrow><mrow><mi>N</mi><mn>0</mn></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">RB i = WB \log_2 \left(1 + \frac{PiGB i}{N0}\right) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">0</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p>
<p>其中WB是MU i和BS-MEC服务器之间的信道带宽，Pi是MU i的传输功率；N0是背景噪声功率；GB i = μ0(gB i )τ是MU i和BS-MEC服务器之间的信道增益，其中μ0是衰落分量，τ是信道路径损耗指数，gB i 是MU i和BS-MEC服务器之间的距离。相应地，RU i 可以定义为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>U</mi><mi>i</mi><mo>=</mo><mi>W</mi><mi>U</mi><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mfrac><mrow><mi>P</mi><mi>i</mi><mi>G</mi><mi>U</mi><mi>i</mi></mrow><mrow><mi>N</mi><mn>0</mn></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">RU i = WU \log_2 \left(1 + \frac{PiGU i}{N0}\right) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">0</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p>
<p>其中WU是MU i和UAV-MEC服务器之间的信道带宽，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>U</mi><mi>i</mi><mo>=</mo><mi>μ</mi><mn>0</mn><mo stretchy="false">(</mo><mi>g</mi><mi>U</mi><mi>i</mi><mo stretchy="false">)</mo><mi>τ</mi></mrow><annotation encoding="application/x-tex">GU i = μ0(gU i )τ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">μ</span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span> 是MU i和UAV-MEC服务器之间的信道增益，gU i 是MU i和UAV-MEC服务器之间的距离。</p>
<p><strong>B. 计算模型</strong></p>
<p><strong>ESP将为BS-MEC服务器或UAV-MEC服务器分配计算任务</strong>。对于每个卸载的任务hi，我们使用<strong>xi，xi ∈ [0, 1]来表示分配给BS-MEC服务器的比例，因此1 − xi表示分配给UAV-MEC服务器的比例。</strong> <strong>xi = 0意味着卸载的任务hi不在BS-MEC服务器上计算，xi = 1意味着卸载的任务hi全部在BS-MEC服务器上计算</strong>。在本文中，我们假设每个卸载任务hi的比例分配由ESP决定，因此我们不考虑xi的具体值，并将其视为一个常数。</p>
<ol>
<li>计算卸载到BS-MEC服务器：基于上述任务模型，根据传输速率RB i，可以从MU i传输任务hi到BS-MEC服务器的时间获得为：</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mo separator="true">,</mo><mi>B</mi></mrow><mi>i</mi></msubsup><mo>=</mo><mfrac><mrow><mi>x</mi><mi>i</mi><mi>l</mi><mi>i</mi></mrow><mrow><mi>R</mi><mi>B</mi><mi>i</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">t_{tran,B}^i = \frac{xili}{RB i} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>BS-MEC服务器分配给MU i的计算资源定义为f B i 。然后，在BS-MEC服务器上的计算时间是卸载任务的计算量除以BS-MEC服务器的计算频率，表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mo separator="true">,</mo><mi>B</mi></mrow><mi>i</mi></msubsup><mo>=</mo><mfrac><mrow><mi>x</mi><mi>i</mi><mi>b</mi><mi>i</mi></mrow><mrow><mi>f</mi><mi>B</mi><mi>i</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">t_{com,B}^i = \frac{xibi}{f B i} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>根据[42]，发送计算结果到MUs的时间被忽略，因此当hi卸载到BS-MEC服务器时的总执行时间可以表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>B</mi><mi>i</mi><mo>=</mo><msubsup><mi>t</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mo separator="true">,</mo><mi>B</mi></mrow><mi>i</mi></msubsup><mo>+</mo><msubsup><mi>t</mi><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mo separator="true">,</mo><mi>B</mi></mrow><mi>i</mi></msubsup><mo>=</mo><mfrac><mrow><mi>x</mi><mi>i</mi><mi>l</mi><mi>i</mi></mrow><mrow><mi>R</mi><mi>B</mi><mi>i</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>x</mi><mi>i</mi><mi>b</mi><mi>i</mi></mrow><mrow><mi>f</mi><mi>B</mi><mi>i</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">tB i = t_{tran,B}^i + t_{com,B}^i = \frac{xili}{RB i} + \frac{xibi}{fB i} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>为了计算MU i的能耗，假设MU i使用恒定的传输功率Pi发送数据，因此MU i卸载其计算任务的能耗可以计算为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>B</mi><mi>i</mi><mo>=</mo><msubsup><mi>t</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mo separator="true">,</mo><mi>B</mi></mrow><mi>i</mi></msubsup><mi>P</mi><mi>i</mi><mo>=</mo><mfrac><mrow><mi>x</mi><mi>i</mi><mi>l</mi><mi>i</mi><mi>P</mi><mi>i</mi></mrow><mrow><mi>R</mi><mi>B</mi><mi>i</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">EB i = t_{tran,B}^i Pi = \frac{xiliPi}{RB i} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ol start="2">
<li>计算卸载到UAV-MEC服务器：类似地，基于传输速率RU i，可以从MU i传输hi到UAV-MEC服务器的时间获得为：</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mo separator="true">,</mo><mi>U</mi></mrow><mi>i</mi></msubsup><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>l</mi><mi>i</mi></mrow><mrow><mi>R</mi><mi>U</mi><mi>i</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">t_{tran,U}^i = \frac{(1 − xi)li}{RU i} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>假设分配给MU i的UAV-MEC服务器的计算资源为fU i 。然后，在UAV-MEC服务器上的计算时间是卸载任务的计算量除以UAV-MEC服务器的计算频率，表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mo separator="true">,</mo><mi>U</mi></mrow><mi>i</mi></msubsup><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>b</mi><mi>i</mi></mrow><mrow><mi>f</mi><mi>U</mi><mi>i</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">t_{com,U}^i = \frac{(1 − xi)bi}{fU i} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>然后，当hi卸载到UAV-MEC服务器时的总执行时间很容易表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>U</mi><mi>i</mi><mo>=</mo><msubsup><mi>t</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mo separator="true">,</mo><mi>U</mi></mrow><mi>i</mi></msubsup><mo>+</mo><msubsup><mi>t</mi><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mo separator="true">,</mo><mi>U</mi></mrow><mi>i</mi></msubsup><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>l</mi><mi>i</mi></mrow><mrow><mi>R</mi><mi>U</mi><mi>i</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>b</mi><mi>i</mi></mrow><mrow><mi>f</mi><mi>U</mi><mi>i</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">tU i = t_{tran,U}^i + t_{com,U}^i = \frac{(1 − xi)li}{RU i} + \frac{(1 − xi)bi}{f U i} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>同样，MU i卸载其计算任务的能耗可以计算为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>U</mi><mi>i</mi><mo>=</mo><msubsup><mi>t</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mo separator="true">,</mo><mi>U</mi></mrow><mi>i</mi></msubsup><mi>P</mi><mi>i</mi><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>l</mi><mi>i</mi><mi>P</mi><mi>i</mi></mrow><mrow><mi>R</mi><mi>U</mi><mi>i</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">EU i = t_{tran,U}^i Pi = \frac{(1 − xi)liPi}{RU i} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><strong>C. MU的模型</strong></p>
<p>对于每个MU，我们使用对数效用函数来表示其卸载计算任务的满足函数，这可以很好地反映MU和满足之间的关系[43]，并且可以表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mo>=</mo><mi>ω</mi><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>l</mi><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Fi = ω \ln(1 + li) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span></span></p>
<p><strong>其中ω表示MU的满足因子，li表示卸载到ESP的计算任务的大小</strong>。此外，我们还考虑了<strong>MUs之间的相互影响</strong>。如[45]所示，MUs的效用函数是基于社会外部性模型建立的。值得注意的是，<strong>每个MU的效用不仅与其内在愿望有关，还受到其他MUs的影响</strong>。具体来说，我们使用矩阵SR来表示MUs之间的影响，MUs的矩阵描述如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>R</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mn>1</mn><mo separator="true">,</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mn>1</mn><mo separator="true">,</mo><mi>N</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mn>2</mn><mo separator="true">,</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mn>2</mn><mo separator="true">,</mo><mi>N</mi><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mi>N</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><mi>N</mi><mo separator="true">,</mo><mi>N</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex"> SR = \begin{bmatrix}
r1,1 &amp; r1,2 &amp; \cdots &amp; r1,N \\
r2,1 &amp; \cdots &amp; r2,N-1 &amp; \cdots &amp; rN-1,2 &amp; \cdots &amp; rN,N
\end{bmatrix} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000002em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000002em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000002em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p>
<p>在矩阵SR中，对于任意两个MUs，<strong>社会关系度表示为ri,j，i, j ∈ {1, 2, …, N}，其中ri,j ∈ [0, 1]。ri,j的值越大，表示MU i和j在社会网络中的关系越密切。</strong> ri,j = 1意味着两个MUs i和j具有紧密的社会关系。而ri,j = 0意味着两个MUs i和j没有关系。此外，认为MU i和MU j之间的影响是相同的，称为ri,j = rj,i，矩阵假定为固定。因此，对于MU i，其他MU对其的总影响表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>i</mi><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>r</mi><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mi>F</mi><mi>j</mi><mo fence="true">)</mo></mrow><mi>F</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">Mi = σ \left( \sum_{j=1}^{N} ri,jFj \right) Fi 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<p><strong>其中σ是社会外部性强度，Fj是MU j（j ≠ i）的满足函数</strong>。当然，MUs在卸载计算任务时需要向ESP支付一些费用，ESP收取统一费用。因此，MU i向ESP的支付计算为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>E</mi><mi>i</mi><mo>=</mo><mi>l</mi><mi>i</mi><mi>d</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">CE i = lidi 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<p><strong>其中di表示MU i向ESP的单位支付</strong>。MU i的效用函数定义为由于计算卸载而增加的效用。因此，MU i的效用函数表示为：<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241031234049.png" alt="image.png"></p>
<p>其中Fi表示MU i的满足函数，Mi表示其他MU对MU i的社会关系影响，EU i和EB i表示MU i将其任务卸载到UAV-MEC服务器或BS-MEC服务器的能耗，CE i代表MU i向ESP的支付。</p>
<p><strong>D. ESP的模型</strong></p>
<p>在本节中，将展示ESP的效用。在我们的场景中，ESP由一个BS-MEC服务器和一个UAV-MEC服务器组成。MUs将其计算任务卸载到ESP进行计算，ESP执行卸载的任务，这不可避免地会产生成本。在<strong>BS-MEC</strong>服务器上执行的计算任务的能耗计算为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>B</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>q</mi><mi>i</mi><mi>x</mi><mi>i</mi><mi>b</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">EB = \sum_{i=1}^{N} qi xibi 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<p><strong>其中qi是当计算任务在BS-MEC服务器上完成时每CPU周期的能耗</strong>。无人机-MEC服务器处理计算任务的能耗表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>U</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>s</mi><mi>i</mi><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>b</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">EU = \sum_{i=1}^{N} si (1 − xi)bi 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<p><strong>其中si是当计算任务在UAV-MEC服务器上完成时每CPU周期的能耗</strong>。ESP的成本可以建模为两个服务器的能耗，因此，我们可以获取ESP的成本函数为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>E</mi><mo>=</mo><mi>E</mi><mi>B</mi><mo>+</mo><mi>E</mi><mi>U</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>q</mi><mi>i</mi><mi>x</mi><mi>i</mi><mi>b</mi><mi>i</mi><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>s</mi><mi>i</mi><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>b</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">EE = EB + EU = \sum_{i=1}^{N} qi xibi + \sum_{i=1}^{N} si (1 − xi)bi 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<p>根据（13），MU i向ESP的支付是lidi；因此，ESP向所有MUs收取的总费用表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>E</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>C</mi><mi>E</mi><mi>i</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>l</mi><mi>i</mi><mi>d</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">CE = \sum_{i=1}^{N} CE i = \sum_{i=1}^{N} lidi 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<p>然后，ESP的效用是其收入减去成本，而收入是来自MUs的支付，成本包括UAV-MEC和BS-MEC服务器的能耗。因此，ESP的效用表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi><mi>E</mi><mo>=</mo><mi>C</mi><mi>E</mi><mi mathvariant="normal">−</mi><mi>E</mi><mi>E</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>l</mi><mi>i</mi><mi>d</mi><mi>i</mi><mi mathvariant="normal">−</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>q</mi><mi>i</mi><mi>x</mi><mi>i</mi><mi>b</mi><mi>i</mi><mi mathvariant="normal">−</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>s</mi><mi>i</mi><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>b</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">UE = CE − EE = \sum_{i=1}^{N} lidi − \sum_{i=1}^{N} qi xibi − \sum_{i=1}^{N} si (1 − xi)bi 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<h2 id="problem-formulation-and-analysis"><a class="markdownIt-Anchor" href="#problem-formulation-and-analysis"></a> Problem Formulation And Analysis</h2>
<p>本节首先介绍优化问题，然后分析问题以及寻找纳什均衡的存在性。</p>
<p><strong>问题表述与分析</strong></p>
<p>本节首先介绍优化问题，然后分析问题以及寻找纳什均衡的存在性。</p>
<p><strong>A. 问题表述</strong></p>
<p>斯塔克伯格博弈将参与者分为领导者和追随者，追随者根据领导者执行的策略选择最优响应。领导者的最优策略与追随者的最优响应相结合，形成斯塔克伯格均衡。因此，斯塔克伯格博弈可以用来模拟ESP和MUs之间的互动。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241031225915.png" alt="image.png"></p>
<p>图2显示了ESP和MUs之间的斯塔克伯格博弈。ESP作为领导者给出其出价策略di，MU i作为追随者决定卸载的任务hi的大小，并用li表示其卸载策略。因此，支付配置和计算任务卸载配置分别表示为d = (d1, d2, …, dN)和l = (l1, l2, …, lN)。我们的目标是最大化ESP和MUs的效用。然后，斯塔克伯格博弈表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Γ</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mi>E</mi><mi>S</mi><mi>P</mi><mo separator="true">,</mo><mi>M</mi><mi>U</mi><mi>s</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>d</mi><mi>i</mi><mo separator="true">,</mo><mi>l</mi><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>U</mi><mi>E</mi><mo separator="true">,</mo><mi>U</mi><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Gamma = \{(ESP, MUs), (di, li), (UE, Ui)\} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p>
<p><strong>斯塔克伯格博弈表</strong></p>
<table>
<thead>
<tr>
<th>玩家</th>
<th>ESP（领导者）</th>
<th>MU i（追随者）</th>
</tr>
</thead>
<tbody>
<tr>
<td>策略</td>
<td>出价策略di</td>
<td>卸载策略li</td>
</tr>
<tr>
<td>效益</td>
<td>UE</td>
<td>Ui</td>
</tr>
</tbody>
</table>
<p>ESP的优化问题表示为：<br>
<strong>问题1：</strong> 最大化UE</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>最大化 </mtext><mi>U</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">\text{最大化 } UE 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord cjk_fallback">最大化</span><span class="mord"> </span></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span></span></p>
<pre><code>受限于：
</code></pre>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>U</mi><mo>&lt;</mo><mi>ϵ</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">总</mi><mi mathvariant="normal">共</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">能</mi><mi mathvariant="normal">耗</mi><mi mathvariant="normal">少</mi><mi mathvariant="normal">于</mi><mi mathvariant="normal">阈</mi><mi mathvariant="normal">值</mi><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">EU &lt; \epsilon （总共的能耗少于阈值）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">共</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">耗</span><span class="mord cjk_fallback">少</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">阈</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">）</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>d</mi><mtext>min</mtext><mi>i</mi></msubsup><mo>≤</mo><mi>d</mi><mi>i</mi><mo>≤</mo><msubsup><mi>d</mi><mtext>max</mtext><mi>i</mi></msubsup><mi mathvariant="normal">（</mi><mi mathvariant="normal">定</mi><mi mathvariant="normal">价</mi><mi mathvariant="normal">必</mi><mi mathvariant="normal">须</mi><mi mathvariant="normal">在</mi><mi mathvariant="normal">指</mi><mi mathvariant="normal">定</mi><mi mathvariant="normal">范</mi><mi mathvariant="normal">围</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">d_{\text{min}}^i \leq di \leq d_{\text{max}}^i（定价必须在指定范围内） 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.121664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">min</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.121664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">max</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">价</span><span class="mord cjk_fallback">必</span><span class="mord cjk_fallback">须</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">范</span><span class="mord cjk_fallback">围</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">）</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><msub><mi>B</mi><mi>i</mi></msub><mo>≤</mo><msubsup><mi>t</mi><mtext>max</mtext><mi>i</mi></msubsup><mi mathvariant="normal">（</mi><mi>B</mi><mi>S</mi><mo>−</mo><mi>M</mi><mi>E</mi><mi>C</mi><mi mathvariant="normal">耗</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">必</mi><mi mathvariant="normal">须</mi><mi mathvariant="normal">少</mi><mi mathvariant="normal">于</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">限</mi><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">tB_i \leq t_{\text{max}}^i （BS-MEC 耗时必须少于上限）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.121664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">max</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">（</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord cjk_fallback">耗</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">必</span><span class="mord cjk_fallback">须</span><span class="mord cjk_fallback">少</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">）</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><msub><mi>U</mi><mi>i</mi></msub><mo>≤</mo><msubsup><mi>t</mi><mtext>max</mtext><mi>i</mi></msubsup><mi mathvariant="normal">（</mi><mi>U</mi><mi>A</mi><mi>C</mi><mo>−</mo><mi>M</mi><mi>E</mi><mi>C</mi><mi mathvariant="normal">耗</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">必</mi><mi mathvariant="normal">须</mi><mi mathvariant="normal">少</mi><mi mathvariant="normal">于</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">限</mi><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">tU_i \leq t_{\text{max}}^i （UAC-MEC耗时必须少于上限）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.121664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">max</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">（</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord cjk_fallback">耗</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">必</span><span class="mord cjk_fallback">须</span><span class="mord cjk_fallback">少</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">）</span></span></span></span></span></p>
<p>其中（22）确保UAV-MEC服务器的能耗小于UAV-MEC服务器用于执行计算任务的能量约束ϵ，（23）显示ESP的出价策略在指定范围内，其中dmax i 和dmin i 分别是最大和最小出价策略，（24）和（25）是任务执行时间的延迟约束。</p>
<p>此外，MU i的优化问题表示为：<br>
<strong>问题2：</strong> 最大化Ui</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>最大化 </mtext><mi>U</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">\text{最大化 } Ui 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord cjk_fallback">最大化</span><span class="mord"> </span></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<pre><code>受限于：
</code></pre>
 0 \leq li \leq Li （卸载的任务量不能超过原任务大小）<mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="0.036ex" height="0.036ex" role="img" focusable="false" viewBox="0 0 16 16"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"></g></g></svg></mjx-container> tB_i \leq t_{\text{max}}^i （同上，耗时不能超过上限）<mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="0.036ex" height="0.036ex" role="img" focusable="false" viewBox="0 0 16 16"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"></g></g></svg></mjx-container> tU_i \leq t_{\text{max}}^i （同上，耗时不能超过上限）<mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="940.658ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 415770.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">中</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mn" transform="translate(3000,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">显</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">示</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">卸</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">载</text></g><g data-mml-node="mi" transform="translate(9000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">任</text></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">务</text></g><g data-mml-node="mi" transform="translate(11000,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(11576,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(11921,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(12921,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">大</text></g><g data-mml-node="mi" transform="translate(13921,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">小</text></g><g data-mml-node="mi" transform="translate(14921,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">应</text></g><g data-mml-node="mi" transform="translate(15921,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">小</text></g><g data-mml-node="mi" transform="translate(16921,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mi" transform="translate(17921,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">任</text></g><g data-mml-node="mi" transform="translate(18921,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">务</text></g><g data-mml-node="mi" transform="translate(19921,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(20809,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(21154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(22154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">大</text></g><g data-mml-node="mi" transform="translate(23154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">小</text></g><g data-mml-node="mi" transform="translate(24154,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(25154,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mn" transform="translate(26154,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(27154,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(28154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(29154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">任</text></g><g data-mml-node="mi" transform="translate(30154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">务</text></g><g data-mml-node="mi" transform="translate(31154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">执</text></g><g data-mml-node="mi" transform="translate(32154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">行</text></g><g data-mml-node="mi" transform="translate(33154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(34154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(35154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(36154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">延</text></g><g data-mml-node="mi" transform="translate(37154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">迟</text></g><g data-mml-node="mi" transform="translate(38154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">约</text></g><g data-mml-node="mi" transform="translate(39154,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">束</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(40154,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mo" transform="translate(41376.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(42098.4,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(42598.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(43357.4,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(43802.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">博</text></g><g data-mml-node="mi" transform="translate(44802.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">弈</text></g><g data-mml-node="mi" transform="translate(45802.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">问</text></g><g data-mml-node="mi" transform="translate(46802.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">题</text></g><g data-mml-node="mi" transform="translate(47802.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">分</text></g><g data-mml-node="mi" transform="translate(48802.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">析</text></g><g data-mml-node="mo" transform="translate(50024.3,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(50746.6,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(51246.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">我</text></g><g data-mml-node="mi" transform="translate(52246.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">们</text></g><g data-mml-node="mi" transform="translate(53246.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">使</text></g><g data-mml-node="mi" transform="translate(54246.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="mo" transform="translate(55468.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(56191,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(56691,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">逆</text></g><g data-mml-node="mi" transform="translate(57691,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">向</text></g><g data-mml-node="mi" transform="translate(58691,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">归</text></g><g data-mml-node="mi" transform="translate(59691,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">纳</text></g><g data-mml-node="mi" transform="translate(60691,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">法</text></g><g data-mml-node="mo" transform="translate(61913.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(62635.4,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(63135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">来</text></g><g data-mml-node="mi" transform="translate(64135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">分</text></g><g data-mml-node="mi" transform="translate(65135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">析</text></g><g data-mml-node="mi" transform="translate(66135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">所</text></g><g data-mml-node="mi" transform="translate(67135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">提</text></g><g data-mml-node="mi" transform="translate(68135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">出</text></g><g data-mml-node="mi" transform="translate(69135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(70135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">问</text></g><g data-mml-node="mi" transform="translate(71135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">题</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(72135.4,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mi" transform="translate(73135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(74135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">第</text></g><g data-mml-node="mi" transform="translate(75135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(76135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">阶</text></g><g data-mml-node="mi" transform="translate(77135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">段</text></g><g data-mml-node="mi" transform="translate(78135.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(79135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">确</text></g><g data-mml-node="mi" transform="translate(80135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">定</text></g><g data-mml-node="mi" transform="translate(81135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">了</text></g><g data-mml-node="mi" transform="translate(82135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">每</text></g><g data-mml-node="mi" transform="translate(83135.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(84135.4,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mi" transform="translate(85186.4,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(85953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(86953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">最</text></g><g data-mml-node="mi" transform="translate(87953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">优</text></g><g data-mml-node="mi" transform="translate(88953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">卸</text></g><g data-mml-node="mi" transform="translate(89953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">载</text></g><g data-mml-node="mi" transform="translate(90953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">决</text></g><g data-mml-node="mi" transform="translate(91953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">策</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(92953.4,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mi" transform="translate(93953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(94953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">第</text></g><g data-mml-node="mi" transform="translate(95953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">二</text></g><g data-mml-node="mi" transform="translate(96953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">阶</text></g><g data-mml-node="mi" transform="translate(97953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">段</text></g><g data-mml-node="mi" transform="translate(98953.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(99953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">根</text></g><g data-mml-node="mi" transform="translate(100953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">据</text></g><g data-mml-node="mi" transform="translate(101953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">所</text></g><g data-mml-node="mi" transform="translate(102953.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mi" transform="translate(103953.4,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mi" transform="translate(105004.4,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(105771.4,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(106240.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(107240.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">决</text></g><g data-mml-node="mi" transform="translate(108240.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">策</text></g><g data-mml-node="mi" transform="translate(109240.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(110240.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">我</text></g><g data-mml-node="mi" transform="translate(111240.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">们</text></g><g data-mml-node="mi" transform="translate(112240.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">确</text></g><g data-mml-node="mi" transform="translate(113240.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">定</text></g><g data-mml-node="mi" transform="translate(114240.4,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mi" transform="translate(115004.4,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(115649.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(116400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(117400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">最</text></g><g data-mml-node="mi" transform="translate(118400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">优</text></g><g data-mml-node="mi" transform="translate(119400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">出</text></g><g data-mml-node="mi" transform="translate(120400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">价</text></g><g data-mml-node="mi" transform="translate(121400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">策</text></g><g data-mml-node="mi" transform="translate(122400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">略</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(123400.4,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mi" transform="translate(124400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">首</text></g><g data-mml-node="mi" transform="translate(125400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">先</text></g><g data-mml-node="mi" transform="translate(126400.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(127400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">证</text></g><g data-mml-node="mi" transform="translate(128400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">明</text></g><g data-mml-node="mi" transform="translate(129400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">了</text></g><g data-mml-node="mi" transform="translate(130400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">所</text></g><g data-mml-node="mi" transform="translate(131400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">提</text></g><g data-mml-node="mi" transform="translate(132400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">出</text></g><g data-mml-node="mi" transform="translate(133400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">博</text></g><g data-mml-node="mi" transform="translate(134400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">弈</text></g><g data-mml-node="mi" transform="translate(135400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">问</text></g><g data-mml-node="mi" transform="translate(136400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">题</text></g><g data-mml-node="mi" transform="translate(137400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(138400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">纳</text></g><g data-mml-node="mi" transform="translate(139400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">什</text></g><g data-mml-node="mi" transform="translate(140400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">均</text></g><g data-mml-node="mi" transform="translate(141400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">衡</text></g><g data-mml-node="mi" transform="translate(142400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(143400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">存</text></g><g data-mml-node="mi" transform="translate(144400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(145400.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">性</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(146400.4,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mo" transform="translate(147622.7,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(148344.9,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(148844.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">定</text></g><g data-mml-node="mi" transform="translate(149844.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">义</text></g><g data-mml-node="mn" transform="translate(150844.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(151344.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">：</text></g><g data-mml-node="mo" transform="translate(152567.1,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(153289.3,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(153789.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(154789.3,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mi" transform="translate(155840.3,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(156607.3,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(157076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">之</text></g><g data-mml-node="mi" transform="translate(158076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(159076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">存</text></g><g data-mml-node="mi" transform="translate(160076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(161076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">唯</text></g><g data-mml-node="mi" transform="translate(162076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(163076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(164076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">纳</text></g><g data-mml-node="mi" transform="translate(165076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">什</text></g><g data-mml-node="mi" transform="translate(166076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">均</text></g><g data-mml-node="mi" transform="translate(167076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">衡</text></g><g data-mml-node="mi" transform="translate(168076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">策</text></g><g data-mml-node="mi" transform="translate(169076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">略</text></g><g data-mml-node="mi" transform="translate(170076.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(171076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(172076.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">中</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(173076.3,0)"><g data-mml-node="mo"><path data-c="24" d="M162 187Q162 164 146 149T109 133H103V130Q108 115 115 105Q122 92 131 82T150 64T170 52T190 44T206 40T220 37L227 36V313Q190 320 162 335Q116 358 86 404T55 508Q55 567 85 614T165 685Q186 696 225 704H227V750H273V704L286 703Q369 690 413 631Q441 588 444 531Q444 514 443 509Q439 490 425 479T391 468Q368 468 353 483T337 522Q337 546 353 560T390 575L394 576V578Q386 599 372 614T342 637T314 649T288 656L273 658V408L288 405Q329 394 355 376Q396 348 420 300T444 199Q444 130 408 76T313 1Q286 -9 276 -9H273V-56H227V-10H221Q202 -6 193 -4T155 11T108 41T74 94T55 176V182Q55 227 95 238Q103 240 108 240Q129 240 145 226T162 187ZM225 657Q219 657 204 651T169 632T135 594T121 538Q121 512 131 491T156 457T187 435T213 423T227 420V539Q227 657 225 657ZM378 169Q378 230 339 265T274 301Q273 301 273 169V37Q324 50 351 87T378 169Z"></path></g></g><g data-mml-node="mi" transform="translate(173576.3,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(174152.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(175207.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(175596.9,0)"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mn" transform="translate(331,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(176331.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(176776.1,0)"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mn" transform="translate(331,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(177510.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(177955.3,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(178400,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(178844.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(179289.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(179734,0)"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(331,-150) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mo" transform="translate(180742.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(181131.9,0)"><g data-mml-node="mo"><path data-c="24" d="M162 187Q162 164 146 149T109 133H103V130Q108 115 115 105Q122 92 131 82T150 64T170 52T190 44T206 40T220 37L227 36V313Q190 320 162 335Q116 358 86 404T55 508Q55 567 85 614T165 685Q186 696 225 704H227V750H273V704L286 703Q369 690 413 631Q441 588 444 531Q444 514 443 509Q439 490 425 479T391 468Q368 468 353 483T337 522Q337 546 353 560T390 575L394 576V578Q386 599 372 614T342 637T314 649T288 656L273 658V408L288 405Q329 394 355 376Q396 348 420 300T444 199Q444 130 408 76T313 1Q286 -9 276 -9H273V-56H227V-10H221Q202 -6 193 -4T155 11T108 41T74 94T55 176V182Q55 227 95 238Q103 240 108 240Q129 240 145 226T162 187ZM225 657Q219 657 204 651T169 632T135 594T121 538Q121 512 131 491T156 457T187 435T213 423T227 420V539Q227 657 225 657ZM378 169Q378 230 339 265T274 301Q273 301 273 169V37Q324 50 351 87T378 169Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(181631.9,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mi" transform="translate(182631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(183631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">这</text></g><g data-mml-node="mi" transform="translate(184631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(185631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">点</text></g><g data-mml-node="mi" transform="translate(186631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">上</text></g><g data-mml-node="mi" transform="translate(187631.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(188631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">存</text></g><g data-mml-node="mi" transform="translate(189631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(190631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(191631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(192631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">效</text></g><g data-mml-node="mi" transform="translate(193631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="mi" transform="translate(194631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">函</text></g><g data-mml-node="mi" transform="translate(195631.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(196631.9,0)"><g data-mml-node="mo"><path data-c="24" d="M162 187Q162 164 146 149T109 133H103V130Q108 115 115 105Q122 92 131 82T150 64T170 52T190 44T206 40T220 37L227 36V313Q190 320 162 335Q116 358 86 404T55 508Q55 567 85 614T165 685Q186 696 225 704H227V750H273V704L286 703Q369 690 413 631Q441 588 444 531Q444 514 443 509Q439 490 425 479T391 468Q368 468 353 483T337 522Q337 546 353 560T390 575L394 576V578Q386 599 372 614T342 637T314 649T288 656L273 658V408L288 405Q329 394 355 376Q396 348 420 300T444 199Q444 130 408 76T313 1Q286 -9 276 -9H273V-56H227V-10H221Q202 -6 193 -4T155 11T108 41T74 94T55 176V182Q55 227 95 238Q103 240 108 240Q129 240 145 226T162 187ZM225 657Q219 657 204 651T169 632T135 594T121 538Q121 512 131 491T156 457T187 435T213 423T227 420V539Q227 657 225 657ZM378 169Q378 230 339 265T274 301Q273 301 273 169V37Q324 50 351 87T378 169Z"></path></g></g><g data-mml-node="mi" transform="translate(197131.9,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(197898.9,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(198243.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(198632.9,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(199153.1,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(199875.4,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(200220.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(200665,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(201185.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(201907.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(202685.5,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(203030.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(203697.2,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(204753,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(205520,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(205865,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(206254,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(206552,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(206897,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(207341.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(207861.9,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(208584.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(209362.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(209707.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(210096.1,0)"><g data-mml-node="mo"><path data-c="24" d="M162 187Q162 164 146 149T109 133H103V130Q108 115 115 105Q122 92 131 82T150 64T170 52T190 44T206 40T220 37L227 36V313Q190 320 162 335Q116 358 86 404T55 508Q55 567 85 614T165 685Q186 696 225 704H227V750H273V704L286 703Q369 690 413 631Q441 588 444 531Q444 514 443 509Q439 490 425 479T391 468Q368 468 353 483T337 522Q337 546 353 560T390 575L394 576V578Q386 599 372 614T342 637T314 649T288 656L273 658V408L288 405Q329 394 355 376Q396 348 420 300T444 199Q444 130 408 76T313 1Q286 -9 276 -9H273V-56H227V-10H221Q202 -6 193 -4T155 11T108 41T74 94T55 176V182Q55 227 95 238Q103 240 108 240Q129 240 145 226T162 187ZM225 657Q219 657 204 651T169 632T135 594T121 538Q121 512 131 491T156 457T187 435T213 423T227 420V539Q227 657 225 657ZM378 169Q378 230 339 265T274 301Q273 301 273 169V37Q324 50 351 87T378 169Z"></path></g></g><g data-mml-node="mi" transform="translate(210596.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(211596.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(212596.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">中</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(213596.1,0)"><g data-mml-node="mo"><path data-c="24" d="M162 187Q162 164 146 149T109 133H103V130Q108 115 115 105Q122 92 131 82T150 64T170 52T190 44T206 40T220 37L227 36V313Q190 320 162 335Q116 358 86 404T55 508Q55 567 85 614T165 685Q186 696 225 704H227V750H273V704L286 703Q369 690 413 631Q441 588 444 531Q444 514 443 509Q439 490 425 479T391 468Q368 468 353 483T337 522Q337 546 353 560T390 575L394 576V578Q386 599 372 614T342 637T314 649T288 656L273 658V408L288 405Q329 394 355 376Q396 348 420 300T444 199Q444 130 408 76T313 1Q286 -9 276 -9H273V-56H227V-10H221Q202 -6 193 -4T155 11T108 41T74 94T55 176V182Q55 227 95 238Q103 240 108 240Q129 240 145 226T162 187ZM225 657Q219 657 204 651T169 632T135 594T121 538Q121 512 131 491T156 457T187 435T213 423T227 420V539Q227 657 225 657ZM378 169Q378 230 339 265T274 301Q273 301 273 169V37Q324 50 351 87T378 169Z"></path></g></g><g data-mml-node="msub" transform="translate(214096.1,0)"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(331,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(214721.1,0)"><g data-mml-node="mo"><path data-c="24" d="M162 187Q162 164 146 149T109 133H103V130Q108 115 115 105Q122 92 131 82T150 64T170 52T190 44T206 40T220 37L227 36V313Q190 320 162 335Q116 358 86 404T55 508Q55 567 85 614T165 685Q186 696 225 704H227V750H273V704L286 703Q369 690 413 631Q441 588 444 531Q444 514 443 509Q439 490 425 479T391 468Q368 468 353 483T337 522Q337 546 353 560T390 575L394 576V578Q386 599 372 614T342 637T314 649T288 656L273 658V408L288 405Q329 394 355 376Q396 348 420 300T444 199Q444 130 408 76T313 1Q286 -9 276 -9H273V-56H227V-10H221Q202 -6 193 -4T155 11T108 41T74 94T55 176V182Q55 227 95 238Q103 240 108 240Q129 240 145 226T162 187ZM225 657Q219 657 204 651T169 632T135 594T121 538Q121 512 131 491T156 457T187 435T213 423T227 420V539Q227 657 225 657ZM378 169Q378 230 339 265T274 301Q273 301 273 169V37Q324 50 351 87T378 169Z"></path></g></g><g data-mml-node="mi" transform="translate(215221.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(216221.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(217221.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">他</text></g><g data-mml-node="mi" transform="translate(218221.1,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mi" transform="translate(219272.1,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(220039.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(220508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(221508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">最</text></g><g data-mml-node="mi" transform="translate(222508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">佳</text></g><g data-mml-node="mi" transform="translate(223508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">策</text></g><g data-mml-node="mi" transform="translate(224508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">略</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(225508.1,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mi" transform="translate(226508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">当</text></g><g data-mml-node="mi" transform="translate(227508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">游</text></g><g data-mml-node="mi" transform="translate(228508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">戏</text></g><g data-mml-node="mi" transform="translate(229508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">处</text></g><g data-mml-node="mi" transform="translate(230508.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mi" transform="translate(231508.1,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mi" transform="translate(232396.1,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mi" transform="translate(233160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(234160.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(235160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">没</text></g><g data-mml-node="mi" transform="translate(236160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mi" transform="translate(237160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">人</text></g><g data-mml-node="mi" transform="translate(238160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">可</text></g><g data-mml-node="mi" transform="translate(239160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">以</text></g><g data-mml-node="mi" transform="translate(240160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">通</text></g><g data-mml-node="mi" transform="translate(241160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">过</text></g><g data-mml-node="mi" transform="translate(242160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">单</text></g><g data-mml-node="mi" transform="translate(243160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">方</text></g><g data-mml-node="mi" transform="translate(244160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">面</text></g><g data-mml-node="mi" transform="translate(245160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">改</text></g><g data-mml-node="mi" transform="translate(246160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">变</text></g><g data-mml-node="mi" transform="translate(247160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(248160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">策</text></g><g data-mml-node="mi" transform="translate(249160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">略</text></g><g data-mml-node="mi" transform="translate(250160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">来</text></g><g data-mml-node="mi" transform="translate(251160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">增</text></g><g data-mml-node="mi" transform="translate(252160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">加</text></g><g data-mml-node="mi" transform="translate(253160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(254160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">效</text></g><g data-mml-node="mi" transform="translate(255160.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(256160.1,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mo" transform="translate(257382.3,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(258104.5,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(258604.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">定</text></g><g data-mml-node="mi" transform="translate(259604.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">理</text></g><g data-mml-node="mn" transform="translate(260604.5,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(261104.5,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">：</text></g><g data-mml-node="mo" transform="translate(262326.7,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(263049,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(263549,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(264549,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">考</text></g><g data-mml-node="mi" transform="translate(265549,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">虑</text></g><g data-mml-node="mi" transform="translate(266549,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">固</text></g><g data-mml-node="mi" transform="translate(267549,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">定</text></g><g data-mml-node="mi" transform="translate(268549,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(269549,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g><g data-mml-node="mi" transform="translate(270549,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mi" transform="translate(271600,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(272367,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(272836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(273836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">动</text></g><g data-mml-node="mi" transform="translate(274836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">态</text></g><g data-mml-node="mi" transform="translate(275836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">策</text></g><g data-mml-node="mi" transform="translate(276836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">略</text></g><g data-mml-node="mi" transform="translate(277836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">下</text></g><g data-mml-node="mi" transform="translate(278836,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(279836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">对</text></g><g data-mml-node="mi" transform="translate(280836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mi" transform="translate(281836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">每</text></g><g data-mml-node="mi" transform="translate(282836,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(283836,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mi" transform="translate(284887,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(285654,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(286654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(287654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">效</text></g><g data-mml-node="mi" transform="translate(288654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="mi" transform="translate(289654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">函</text></g><g data-mml-node="mi" transform="translate(290654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(291654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">满</text></g><g data-mml-node="mi" transform="translate(292654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">足</text></g><g data-mml-node="mi" transform="translate(293654,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mn" transform="translate(294654,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(295654,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(296654,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mi" transform="translate(297654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">然</text></g><g data-mml-node="mi" transform="translate(298654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">后</text></g><g data-mml-node="mi" transform="translate(299654,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(300654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">对</text></g><g data-mml-node="mi" transform="translate(301654,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mi" transform="translate(302654,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mi" transform="translate(303705,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(304472,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(304941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">存</text></g><g data-mml-node="mi" transform="translate(305941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(306941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(307941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(308941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">唯</text></g><g data-mml-node="mi" transform="translate(309941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(310941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(311941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">纳</text></g><g data-mml-node="mi" transform="translate(312941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">什</text></g><g data-mml-node="mi" transform="translate(313941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">均</text></g><g data-mml-node="mi" transform="translate(314941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">衡</text></g><g data-mml-node="mi" transform="translate(315941,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">点</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(316941,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mo" transform="translate(317941,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g><g data-mml-node="mo" transform="translate(318219,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(318497,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(318842,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(319720,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(320249,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(320726,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(321192,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(321636.6,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(322139.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(322739.6,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(323216.6,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(323494.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(323883.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(324459.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(324820.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(325181.6,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(325684.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(326431.4,0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(326987.2,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(327487.2,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(327987.2,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(328348.2,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(328838.2,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(329341.2,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(329826.2,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(330277.2,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(331028.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(332028.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(332557.6,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(332855.6,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(333200.6,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(333690.6,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(334262.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(334862.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(1000,0)"></path></g><g data-mml-node="mi" transform="translate(336140.6,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(336625.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(337094.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(337785.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(338786.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(339219.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(340041.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(341041.5,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(341617.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(342146.5,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(342746.5,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(343223.5,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(343688.5,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(344264.5,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(344749.5,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345321.5,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(345766.2,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(346295.2,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(346593.2,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(346938.2,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(347428.2,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(348000.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(348600.2,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(349033.2,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(349502.2,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(349946.9,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(350379.9,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(350864.9,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(351742.9,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(352242.9,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(352587.9,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(353465.9,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(353942.9,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(354442.9,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(1000,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(2000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(2500,0)"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(3000,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(3500,0)"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(4000,0)"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(4500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(5000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(5500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(6000,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(6500,0)"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(7000,0)"></path></g><g data-mml-node="mi" transform="translate(361720.9,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(362223.9,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(362823.9,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(363300.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(363912.1,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(364634.3,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(365134.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">证</text></g><g data-mml-node="mi" transform="translate(366134.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">明</text></g><g data-mml-node="mi" transform="translate(367134.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">：</text></g><g data-mml-node="mo" transform="translate(368356.5,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(369078.7,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(369578.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">对</text></g><g data-mml-node="mi" transform="translate(370578.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mi" transform="translate(371578.7,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mi" transform="translate(372629.7,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(373396.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(373741.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(374741.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">效</text></g><g data-mml-node="mi" transform="translate(375741.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="mi" transform="translate(376741.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">函</text></g><g data-mml-node="mi" transform="translate(377741.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(378741.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(379741.7,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(380508.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(380853.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(381853.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(382853.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">公</text></g><g data-mml-node="mi" transform="translate(383853.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">式</text></g><g data-mml-node="mi" transform="translate(384853.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">如</text></g><g data-mml-node="mi" transform="translate(385853.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mn" transform="translate(386853.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(387853.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(388853.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">所</text></g><g data-mml-node="mi" transform="translate(389853.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">示</text></g><g data-mml-node="mi" transform="translate(390853.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(391853.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(392425.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(392770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(393770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(394770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(395770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">常</text></g><g data-mml-node="mi" transform="translate(396770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(397770.7,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mi" transform="translate(398770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">然</text></g><g data-mml-node="mi" transform="translate(399770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">后</text></g><g data-mml-node="mi" transform="translate(400770.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(401770.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mn" transform="translate(402770.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(403770.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(404770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(405770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(406770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">阶</text></g><g data-mml-node="mi" transform="translate(407770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">导</text></g><g data-mml-node="mi" transform="translate(408770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(409770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">可</text></g><g data-mml-node="mi" transform="translate(410770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">以</text></g><g data-mml-node="mi" transform="translate(411770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">计</text></g><g data-mml-node="mi" transform="translate(412770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(413770.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(414770.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">：</text></g></g></g></svg></mjx-container> \frac{\partial Ui}{\partial li} = \frac{\omega}{1 + li} \left(1 + \sigma \sum_{j=1}^{N} ri,jFj \right) - \frac{xiPi}{RB i} - \frac{(1 - xi)Pi}{RU i} - di 
<p>接下来，（29）的二阶导数可以计算为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>U</mi><mi>i</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>l</mi><mn>2</mn></msup><mi>i</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mfrac><mi>ω</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>l</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mi>σ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>r</mi><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mi>F</mi><mi>j</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\frac{\partial^2 Ui}{\partial l^2 i} = -\frac{\omega}{(1 + li)^2} \left(1 + \sigma \sum_{j=1}^{N} ri,jFj \right) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span></span></p>
<p>由于ω &gt; 0且(1 + li)^2 &gt; 0，效用函数的二阶导数是负的。<strong>可以观察到MU i的效用函数是一个严格凹函数，这证明了纳什均衡的存在。</strong> 因此，定理1得证。一阶导数（30）设为0，我们可以得到：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>l</mi><mo>∗</mo></msup><mi>i</mi><mo>=</mo><mfrac><mrow><mi>ω</mi><mi>M</mi><mi>i</mi></mrow><mrow><mi>Z</mi><mi>i</mi><mo>+</mo><mi>d</mi><mi>i</mi></mrow></mfrac><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">l^* i = \frac{\omega Mi}{Zi + di} - 1 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>其中</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>i</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi>σ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>r</mi><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mi>F</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">Mi = 1 + \sigma \sum_{j=1}^{N} ri,jFj 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mi>i</mi><mo>=</mo><mi>x</mi><mi>i</mi><mi>P</mi><mi>i</mi><mi mathvariant="normal">/</mi><mi>R</mi><mi>B</mi><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>P</mi><mi>i</mi><mi mathvariant="normal">/</mi><mi>R</mi><mi>U</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">Zi = xiPi/RB i + (1 - xi)Pi/RU i 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<p>因此，我们可以得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>∗</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">l*i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>是MU i关于其卸载计算任务大小的最佳策略 。<br>
然后，设置<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>∗</mo><mi>i</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">l*i=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>∗</mo><mi>i</mi><mo>=</mo><mi>L</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">l*i=Li</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span></span></span></span>，我们可以得到ESP的出价阈值为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mtext>min</mtext></msub><mi>i</mi><mo>=</mo><mfrac><mrow><mi>ω</mi><mi>M</mi><mi>i</mi></mrow><mrow><mn>1</mn><mo>+</mo><mi>L</mi><mi>i</mi></mrow></mfrac><mo>−</mo><mfrac><mrow><mi>Z</mi><mi>i</mi></mrow><mrow><mi>L</mi><mi>i</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">d_{\text{min}} i = \frac{\omega Mi}{1 + Li} - \frac{Zi}{Li} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">min</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mtext>max</mtext></msub><mi>i</mi><mo>=</mo><mfrac><mrow><mi>ω</mi><mi>M</mi><mi>i</mi></mrow><mrow><mi>Z</mi><mi>i</mi></mrow></mfrac><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d_{\text{max}} i = \frac{\omega Mi}{Zi} - 1 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">max</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>通常，如果ESP的出价太高，MUs将不会将他们的计算任务卸载到ESP，如果ESP的出价太低，MUs将卸载所有计算任务。</p>
<blockquote>
<p>[!tip]<br>
这里初次看可能会比较费解，其实关键之处就是知道用户的效用函数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">U_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">l_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的二阶偏导一直是负值就可以了。一方面，这证明了效用函数存在纳什均衡；另一方面，说明一阶偏导是单调递减的，那么一阶导数为0的时候就是取极大值也是最大值的时候。<br>
因此，<strong>将一阶偏导置为0，就能得出一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>l</mi><mi>i</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">l_i^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.953104em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span></strong>，那么也可以得出当卸载任务量为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>l</mi><mi>i</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">l_i^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.953104em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>时，可以得到最大效用。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>l</mi><mi>i</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">l_i^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.953104em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>也就是此时的最佳卸载策略。<br>
然后是这样，每个用户全部的任务量是Li，如果价格足够低，那用户肯定是直接把全部的任务都给服务器，此时的最佳策略当然就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>l</mi><mi>i</mi><mo>∗</mo></msubsup><mo>=</mo><mi>L</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">l_i^*= Li</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.953104em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span></span></span></span>；如果价格实在太高，那么用户什么任务也不会卸载的，此时的最佳策略当然就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>l</mi><mi>i</mi><mo>∗</mo></msubsup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">l_i^*=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.953104em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。 <strong>那么分别带入一阶导数为0 的式子</strong>，就可以知道最低定价和最高定价了。<br>
<strong>这里的公式只是语言的另一种形象化表达</strong></p>
</blockquote>
<p>因此，ESP的最佳策略应该在dmin i和dmax i之间，MU i的最优策略满足：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>l</mi><mo>∗</mo></msup><mi>i</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>L</mi><mi>i</mi><mi mathvariant="normal">（</mi><mi>L</mi><mi>i</mi><mi mathvariant="normal">为</mi><mi mathvariant="normal">全</mi><mi mathvariant="normal">部</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">任</mi><mi mathvariant="normal">务</mi><mi mathvariant="normal">量</mi><mi mathvariant="normal">）</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>d</mi><mi>i</mi><mo>≤</mo><msub><mi>d</mi><mtext>min</mtext></msub><mi>i</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>ω</mi><mi>M</mi><mi>i</mi></mrow><mrow><mi>Z</mi><mi>i</mi><mo>+</mo><mi>d</mi><mi>i</mi></mrow></mfrac><mo>−</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><msub><mi>d</mi><mtext>min</mtext></msub><mi>i</mi><mo>&lt;</mo><mi>d</mi><mi>i</mi><mo>&lt;</mo><msub><mi>d</mi><mtext>max</mtext></msub><mi>i</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>d</mi><mi>i</mi><mo>≥</mo><msub><mi>d</mi><mtext>max</mtext></msub><mi>i</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex"> l^* i = \begin{cases} 
Li
（Li为全部的任务量）, &amp; \text{if } di \leq d_{\text{min}} i \\
\frac{\omega Mi}{Zi + di} - 1, &amp; \text{if } d_{\text{min}} i &lt; di &lt; d_{\text{max}} i \\
0, &amp; \text{if } di \geq d_{\text{max}} i 
\end{cases} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span><span class="mord cjk_fallback">（</span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">全</span><span class="mord cjk_fallback">部</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">任</span><span class="mord cjk_fallback">务</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">）</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">min</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">min</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">max</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">max</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>此外，根据（38），当dmin i &lt; di &lt; dmax i时，我们可以得到以下两个方程：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>l</mi><mo>∗</mo></msup><mi>i</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>d</mi><mi>i</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mfrac><mrow><mi>ω</mi><mi>M</mi><mi>i</mi></mrow><mrow><mo stretchy="false">(</mo><mi>Z</mi><mi>i</mi><mo>+</mo><mi>d</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l^* i}{\partial di} = -\frac{\omega Mi}{(Zi + di)^2} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.29633em;vertical-align:-0.936em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><msup><mi>l</mi><mo>∗</mo></msup><mi>i</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>d</mi><mn>2</mn></msup><mi>i</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mn>2</mn><mi>ω</mi><mi>M</mi><mi>i</mi></mrow><mrow><mo stretchy="false">(</mo><mi>Z</mi><mi>i</mi><mo>+</mo><mi>d</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>3</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial^2 l^* i}{\partial d^2 i} = \frac{2\omega Mi}{(Zi + di)^3} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.29633em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><strong>一阶导数小于0</strong>，<strong>这意味着ESP提供的出价越高，MU卸载的计算任务的大小就越小。</strong> 此外，二阶导数恒为正。因此，它是一个严格凹函数，在给定的di范围内，导出的策略l*i是最优和唯一的。</p>
<p><strong>定义2：</strong> 如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi><mi>E</mi><mo stretchy="false">(</mo><mi>d</mi><mo>∗</mo><mi>i</mi><mo separator="true">,</mo><mi>l</mi><mo>∗</mo><mi>i</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>U</mi><mi>E</mi><mo stretchy="false">(</mo><mi>d</mi><mi>i</mi><mo separator="true">,</mo><mi>l</mi><mo>∗</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">UE(d*i, l*i) &gt; UE(di, l*i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span>，则存在MUs和ESP之间的唯一斯塔克伯格均衡。<br>
<strong>定理2：</strong> 考虑ESP的动态出价策略和固定数量的MUs，对于ESP，其效用函数满足（19）。然后，存在MUs和ESP之间的唯一纳什均衡。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241101131505.png" alt="image.png"></p>
<p><strong>证明：</strong> 将xi视为常数，并将获得的最佳策略l<em>i代入UE，UE(di, l</em>i)可以得到。ESP的效用函数表示为（41）：<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241101131635.png" alt="image.png"></p>
<p>因此<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi><mi>E</mi><mo stretchy="false">(</mo><mi>d</mi><mi>i</mi><mo separator="true">,</mo><mi>l</mi><mo>∗</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">UE(di, l*i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span>对di ( <strong>这里的di单指某一个用户</strong> ) 的一阶偏导数计算为（42）：<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241101131645.png" alt="image.png"></p>
<blockquote>
<p>[!tip]<br>
这里注意，上面的UE是指ESP对全部用户的总收益，下面的这个"<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mi>E</mi></msub><mo stretchy="false">(</mo><msub><mi>d</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>l</mi><mi>i</mi><mo>∗</mo></msubsup><mo stretchy="false">)</mo><mi mathvariant="normal">对</mi><mi>d</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">U_E(d_i,l_i^*) 对di</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008664em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">对</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span></span></span></span> "计算的是针对某一位用户的收益。因为ESP可以对不同用户采取不同的收费策略</p>
</blockquote>
<p>之后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi><mi>E</mi><mo stretchy="false">(</mo><mi>d</mi><mi>i</mi><mo separator="true">,</mo><mi>l</mi><mo>∗</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">UE(di, l*i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span>对di的二阶导数制定为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>U</mi><mi>E</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>d</mi><mn>2</mn></msup><mi>i</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mn>2</mn><mi>a</mi><mi>M</mi><mi>i</mi><mrow><mo fence="true">(</mo><mi>Z</mi><mi>i</mi><mo>+</mo><mi>x</mi><mi>i</mi><mi>q</mi><mi>i</mi><mi>a</mi><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>s</mi><mi>i</mi><mi>a</mi><mi>i</mi><mo fence="true">)</mo></mrow><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>Z</mi><mi>i</mi><mo>+</mo><mi>d</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>3</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial^2 UE}{\partial d^2 i} = -2aMi \left( Zi + xiqiai + (1 - xi)siai \right) \frac{1}{(Zi + di)^3} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>因为(Zi+di)^3 &gt; 0且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mi>i</mi><mo>+</mo><mi>x</mi><mi>i</mi><mi>q</mi><mi>i</mi><mi>a</mi><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>s</mi><mi>i</mi><mi>a</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">Zi+xiqiai+(1−xi)siai</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span></span></span></span>&gt; 0，很明显ESP效用函数的二阶导数是负的。<strong>可以观察到ESP的效用函数UE(di, l*i)是一个严格凹函数，这证明了纳什均衡的存在</strong>。</p>
<p>因此，定理2得证。根据上述定理，证明了斯塔克伯格-纳什均衡在第一阶段和第二阶段都存在且唯一。同样，将（42）的一阶导数设为0，我们可以得到方程：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>d</mi><mo>∗</mo></msup><mi>i</mi><mo>=</mo><msqrt><mrow><mi>ω</mi><mi>M</mi><mi>i</mi><mrow><mo fence="true">(</mo><mi>Z</mi><mi>i</mi><mo>+</mo><mi>x</mi><mi>i</mi><mi>q</mi><mi>i</mi><mi>a</mi><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>s</mi><mi>i</mi><mi>a</mi><mi>i</mi><mo fence="true">)</mo></mrow></mrow></msqrt><mo>−</mo><mi>Z</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">d^* i = \sqrt{\omega Mi \left( Zi + xiqiai + (1 − xi)siai \right)} - Zi 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.25612499999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.983875em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.9438750000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,
158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067
c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,
175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71
c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,
-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26
s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25612499999999994em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span></span></span></span></span></p>
<p>根据最佳策略di应在dmin i和dmax i之间的事实，因此ESP的最优策略如下所示：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>d</mi><mo>∗</mo></msup><mi>i</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>d</mi><mtext>min</mtext></msub><mi>i</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>d</mi><mi>i</mi><mo>≤</mo><msub><mi>d</mi><mtext>min</mtext></msub><mi>i</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msqrt><mrow><mi>ω</mi><mi>M</mi><mi>i</mi><mrow><mo fence="true">(</mo><mi>Z</mi><mi>i</mi><mo>+</mo><mi>x</mi><mi>i</mi><mi>q</mi><mi>i</mi><mi>a</mi><mi>i</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>x</mi><mi>i</mi><mo stretchy="false">)</mo><mi>s</mi><mi>i</mi><mi>a</mi><mi>i</mi><mo fence="true">)</mo></mrow></mrow></msqrt><mo>−</mo><mi>Z</mi><mi>i</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><msub><mi>d</mi><mtext>min</mtext></msub><mi>i</mi><mo>&lt;</mo><mi>d</mi><mi>i</mi><mo>&lt;</mo><msub><mi>d</mi><mtext>max</mtext></msub><mi>i</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>d</mi><mtext>max</mtext></msub><mi>i</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>d</mi><mi>i</mi><mo>≥</mo><msub><mi>d</mi><mtext>max</mtext></msub><mi>i</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex"> d^* i = \begin{cases} 
d_{\text{min}} i, &amp; \text{if } di \leq d_{\text{min}} i \\
\sqrt{\omega Mi \left( Zi + xiqiai + (1 − xi)siai \right)} - Zi, &amp; \text{if } d_{\text{min}} i &lt; di &lt; d_{\text{max}} i \\
d_{\text{max}} i, &amp; \text{if } di \geq d_{\text{max}} i 
\end{cases} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">min</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,
158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067
c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,
175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71
c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,
-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26
s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault">i</span><span class="mpunct">,</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">max</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">min</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">min</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">max</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">max</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<blockquote>
<p>[!note]<br>
这一部分的原理同上，就是证明出商家ESP的收益函数也是一个严格凹函数（二阶导数始终保持负值），那么也就说明ESP的效益函数存在纳什均衡。 和上面一样，一阶导数为0时能够取得最大收益，此时能够得到最佳定价 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>d</mi><mi>i</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">d_i^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.953104em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>。</p>
</blockquote>
<h2 id="gradient-based-dynamic-iterative-search-algorithm"><a class="markdownIt-Anchor" href="#gradient-based-dynamic-iterative-search-algorithm"></a> Gradient-Based Dynamic Iterative Search Algorithm</h2>
<p><strong>V. 基于梯度的动态迭代搜索算法</strong></p>
<p>本节提出了GDISA来获得唯一的纳什和斯塔克伯格均衡。</p>
<p>算法1展示了GDISA的细节。首先，我们设置了迭代次数m = 0和n = 0的初始值。然后，ESP在dmin i和dmax i之间设置了初始出价策略d(0)，这些可以通过（36）和（37）计算得出，所有MUs设置了初始卸载策略l(0)在0和Li之间。</p>
<p>在收到初始d(0)和l(0)后，ESP根据d(m + 1) = d(m) + θ∇UE(d(m), l*(d(m)))计算其新的出价策略，<em><em>其中∇UE(d(m), l</em>(d(m)))是基于（42）和（45）的梯度([∂UE(m)]/[∂di(m)]), θ是步长</em>*。此时，每个MU i根据l(n + 1) = l(n) + θ∇Ui(l(n), l*(l(n)))计算其新的卸载策略，<em><em>其中∇Ui(l(n), l</em>(l(n)))是基于（32）和（38）的梯度([∂Ui(n)]/[∂li(n)]), θ是步长。</em>* 然后，设置n+1 = n和m+1 = m，ESP和MUs将继续迭代寻找更好的策略以最大化他们的效用。</p>
<p>直到([∥ln+1 − ln∥1]/[∥ln∥1]) ≤ ξ，MUs将停止重复，迭代结束，其中ξ是精度阈值，∥y∥1表示y的一阶范数。同样，ESP将在([∥dm+1 − dm∥1]/[∥dm∥1]) ≤ ξ时停止重复。此时，可以获得ESP和MUs策略的近似最优解，分别表示为d<em>和l</em>。因此，获得了ESP和MUs的最优效用。</p>
<p><strong>算法1 GDISA</strong><br>
输入：MUs N，任务Hi，以及其他参数；<br>
输出：最佳出价策略d*，最佳卸载策略l*，U<em>i，U</em>E；<br>
1: 初始化：m = 0, n = 0, 精度阈值ξ，步长θ；<br>
2: 设置d(m) = (d1(m), d2(m), …, dN(m))，其中dmin i &lt; di(m) &lt; dmax i；<br>
3: ESP使用梯度上升搜索算法找到最佳出价集，其中d(m + 1) = d(m) + θ∇UE(d(m), l*(d(m)))；<br>
4: 设置l(n) = (l1(n), l2(n), …, lN(n))，其中0 &lt; li(n) &lt; Li；<br>
5: 每个MU i使用梯度上升搜索算法找到最佳卸载集，其中l(n + 1) = l(n) + θ∇Ui(l(n), l*(l(n)))；<br>
6: while <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∥</mi><mi>d</mi><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>d</mi><mi>m</mi><mi mathvariant="normal">∥</mi><mn>1</mn></mrow><mrow><mi mathvariant="normal">∥</mi><mi>d</mi><mi>m</mi><mi mathvariant="normal">∥</mi><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{∥dm+1−dm∥1} {∥dm∥1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">m</span><span class="mord mtight">∥</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">m</span><span class="mord mtight">∥</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ≥ ξ do<br>
7: 对于每次迭代m<br>
8: 重复步骤（2）和步骤（3）；<br>
9: while <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∥</mi><mi>l</mi><mi>n</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">−</mi><mi>l</mi><mi>n</mi><mi mathvariant="normal">∥</mi><mn>1</mn></mrow><mrow><mi mathvariant="normal">∥</mi><mi>l</mi><mi>n</mi><mi mathvariant="normal">∥</mi><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{∥ln+1−ln∥1}{∥ln∥1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">n</span><span class="mord mtight">∥</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">n</span><span class="mord mtight">∥</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ≥ ξ do<br>
10: 对于每次迭代n<br>
11: 重复步骤（4）和步骤（5）；<br>
12: n ← n + 1；<br>
13: end while<br>
14: m ← m + 1；<br>
15: end while<br>
16: 获得最优d<em>和l</em>；<br>
17: 根据方程（19）计算U<em>E，根据方程（14）计算U</em>i；<br>
18: 返回U<em>i，U</em>E</p>
<blockquote>
<p>[!note]<br>
这里就是普通的梯度下降算法，初始的(l1,l2,l3,…)还有(d1,d2,d3,…)都是随机的</p>
</blockquote>
<h2 id="simulation-results"><a class="markdownIt-Anchor" href="#simulation-results"></a> SIMULATION RESULTS</h2>
<p><strong>VI. 模拟结果</strong></p>
<p>本节进行模拟以评估GDISA的收敛性能和有效性。特别是，将GDISA与其他基准方法进行比较，并研究了一些参数对ESP和MUs效用的影响。</p>
<p><strong>A. 参数设置</strong></p>
<p>在模拟中，多个MUs随机分布在ESP的覆盖范围内。MUs的数量设置在[5, 30]的范围内。MUs生成的任务大小在10M到20M之间，任务的容忍延迟在[0.05秒，3秒]的范围内。我们设置了BS-MEC和UAV-MEC服务器的单位能耗在[0.2, 1.7]（焦耳/兆次循环）的范围内。满意度因子度为5，复杂度因子在[0.1, 5]的范围内。BS-MEC服务器的计算频率为50 GHz，UAV-MEC服务器的计算频率为10 GHz。表II给出了使用的主参数。此外，我们提供了以下四种基准方法进行性能比较：</p>
<ol>
<li>随机（RANDOM）：ESP的出价和MUs的卸载策略都是随机生成的。</li>
<li>全部卸载（FO）：所有MUs的任务都卸载到ESP，然后ESP根据我们提出的GDISA确定其最优策略。</li>
<li><strong>无UAV-MEC服务器（NU</strong>）：类似于[44]，系统中没有UAV-MEC服务器，只有一个BS-MEC服务器为MUs提供计算服务。</li>
<li><strong>ESP和MU之间的非合作博弈</strong>（NG）：NG没有考虑其他MUs的影响，因此只有MUs之间的竞争，<strong>每个MU独立与ESP互动以找到自己的最优决策，而不考虑其他MUs的政策</strong>。这是一个非合作博弈，每个MU与ESP之间[45]。</li>
</ol>
<p><strong>B. 收敛性能</strong></p>
<p>图3显示了所有MUs和ESP效用的迭代过程。最初设置MUs的数量为5。如图3所示，ESP和MUs的效用逐渐增加，并最终收敛和稳定。此外，ESP的效用在开始时相对较高，随着迭代次数的增加而迅速增加。大约100次迭代后，它稳定并接近最优解。可以发现，MUs的平均效用也从比较高的值开始。然而，与ESP的效用相比，MUs的平均效用没有很快达到稳定状态。这是由于MUs之间的非合作关系，它们相互竞争以最大化自己的效用。最终，获得了ESP和MUs的效用以及相应的最优解。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241101143606.png" alt="image.png"></p>
<p><strong>C. 参数影响</strong></p>
<p>这部分评估了BS-MEC服务器和UAV-MEC服务器单位能耗对ESP效用的影响。如图4所示，我们将两个服务器的单位能耗设置在[0.2, 1.7]的范围内。随着单位能耗的增加，ESP的效用减少，它们之间的关系是线性且成反比的。这是因为单位能耗的增加，相应地，ESP执行计算任务的成本变得更高，这不可避免地降低了ESP的效用。此外，当单位能耗保持不变且MUs数量增加时，ESP的效用增加。主要原因是随着MUs数量的增加，更多的MUs参与任务卸载过程，ESP可以通过出售更多的计算资源来增加其效用。根据我们的模型，ESP可以通过参与计算卸载来增加其效用。此外，由于单位能耗与决策和MUs的效用无关，我们不评估其对MUs效用的影响。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241101143623.png" alt="image.png"></p>
<p><strong>D. 性能比较</strong></p>
<p>这部分比较了GDISA与其他四种基准方法在不同场景下的性能。首先，我们比较了在不同MUs数量下ESP和MUs的效用。图5和图6分别展示了在不同MUs数量下GDISA与其他基准方法的性能比较。图5显示了MUs平均效用的性能比较，图6显示了ESP效用的性能比较。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241101143825.png" alt="image.png"></p>
<p>可以看到，在不同MUs数量下，GDISA的表现最佳。此外，其他三种方法随着MUs数量的逐渐增加，表现出与GDISA相同的趋势。具体来说，我们可以观察到NU的效用最低。这是因为如果ESP只包括BS-MEC服务器，它将承受更大的计算压力，无法进行许多MUs的任务。MUs无法通过计算卸载来增加他们的效用，ESP也无法通过出售更多的计算资源来提高其效用。因此，在NU情况下，MUs和ESP的效用都较低。此外，MUs和ESP的效用在FO情况下相对较高，接近GDISA。这表明当所有MUs的计算任务都卸载时，MUs和ESP的效用接近他们的最优效用。相应地，在随机情况下，ESP和MUs的效用高于NU且低于FO。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241101143840.png" alt="image.png"></p>
<p>由于NG没有考虑其他MUs的影响，其在MUs平均效用方面的性能显著低于我们提出的GDISA。这表明MUs之间的社会关系在卸载决策中起着至关重要的作用，每个MU独立获取最优策略无法带来更好的整体平均效用。与MUs的平均效用相比，NG在ESP效用方面表现更好。在NG情况下，ESP仍然可以通过出售计算资源获得相对较高的效用。总的来说，可以发现UAV-MEC服务器和MUs的社会关系对不同方法的性能有重要影响。</p>
<p>图7显示了在不同单位能耗qi下ESP效用的比较。同样，对于ESP，GDISA具有最高的效用。在其他四种基准方案中，NG的效用更高，NU的效用更低。此外，随着单位能耗qi的增加，ESP的效用减少，这已经在图4中详细描述。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241101143852.png" alt="image.png"></p>
<p>总之，我们证明了GDISA不仅可以提高MUs和ESP的效用，而且可以获得唯一的均衡。因此，GDISA在不同场景中被证明是有效的。</p>
<p><strong>VII. 讨论和未来工作</strong></p>
<p>本节讨论了潜在的和有吸引力的未来工作。</p>
<p><strong>A. 无人机辅助和基于区块链的计算卸载</strong></p>
<p>区块链已经吸引了广泛的关注，并在各种应用领域中得到广泛应用，特别是在与边缘计算结合时。由于我们提出的无人机辅助计算卸载中没有考虑安全交易问题，将区块链与我们提出的模型结合起来是有效的。在区块链赋能和无人机辅助的计算卸载中，MUs在向ESP支付相应费用后，可以将他们的计算任务卸载到BS-MEC服务器或UAV-MEC服务器，所有交易数据都记录在区块链上，以建立信任和保护隐私。我们可以引入智能合约技术，这是一种可靠的市场监督解决方案，因为它部署在区块链上，无法被篡改。通过区块链的去中心化、安全性和可追溯性，智能合约使MUs能够保持信息透明度并与ESP建立信任，从而确保MUs支付的可靠性，并禁止恶意支付和其他非法行为。在未来，我们将考虑使用区块链赋能和无人机辅助的计算卸载中的智能合约来解决优化问题。</p>
<p><strong>B. 无人机辅助和基于深度强化学习的计算卸载</strong></p>
<p>最近，各种人工智能（AI）方法，如深度强化学习（DRL），已被用于解决MEC中的优化问题。一方面，通过结合DRL，计算从远程云推向网络边缘，以实现各种实时和可靠的智能服务。另一方面，DRL也有潜力解决各种网络优化问题（例如，卸载决策和资源分配）。</p>
<p>我们目前的研究重点是提高静态系统的性能，而没有考虑动态时变环境。为了解决时变系统中的复杂优化问题，DRL方法更适合获得最佳决策策略并最大化长期奖励。在未来的工作中，我们将考虑使用DRL来解决动态时变环境中的优化问题。</p>
<p><strong>VIII. 结论</strong></p>
<p>本文研究了一个由一个UAV-MEC服务器、一个BS-MEC服务器和多个MUs组成的无人机辅助MEC网络。为了最大化ESP和MUs的效用，ESP和MUs之间的互动被建模为斯塔克伯格博弈，使用逆向归纳法分析了我们提出的博弈问题。证明了所提出的博弈可以达到唯一的纳什均衡，然后提出了GDISA来获得近似最优解。模拟结果表明，GDISA可以有效地激发ESP和MUs之间的合作，并且在不同场景下的表现优于其他基线方法。</p>
]]></content>
      <categories>
        <category>博弈论</category>
      </categories>
      <tags>
        <tag>Stackelberg</tag>
      </tags>
  </entry>
  <entry>
    <title>大模型算力是如何计算的</title>
    <url>/sni2x9/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>多模态</category>
      </categories>
      <tags>
        <tag>大模型</tag>
      </tags>
  </entry>
  <entry>
    <title>Rich Human Feedback for Text-to-Image Generation</title>
    <url>/sni2v6/</url>
    <content><![CDATA[<h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2>
<p>最近文本到图像（T2I）生成模型，如<strong>Stable Diffusion</strong>和<strong>Imagen</strong>，在基于文本描述生成高分辨率图像方面取得了显著进展。然而，许多生成的图像仍然存在诸如伪影/不切实际、与文本描述不一致以及低审美质量等问题。受到<strong>人类反馈强化学习（RLHF）在大型语言模型中成功的启发</strong>，先前的工作收集了人类对生成图像的评分作为反馈，并训练了一个奖励模型来改进 T2I 生成。在本文中，我们通过（i）标记图像中不切实际或与文本不一致的区域，以及（ii）注释文本提示中在图像中未被正确表示或缺失的词汇，来丰富反馈信号。我们在 18K 生成图像上收集了这样的丰富人类反馈（RichHF18K），并训练了一个多模态变换器来自动预测丰富的反馈。我们展示了预测的丰富人类反馈如何被用来改进图像生成，例如，通过<strong>选择高质量的训练数据进行微调</strong>以改进生成模型，或者通过<strong>创建带有预测热图的掩码来修复问题区域</strong>。值得注意的是，这些改进推广到了超出我们收集人类反馈数据所用模型（(Stable Diffusion variants）之外的模型（如<strong>Muse</strong>）。RichHF-18K 数据集将在我们的 GitHub 仓库中发布。</p>
<h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1. Introduction</h2>
<p>文本到图像（T2I）生成模型[12, 17, 41, 42, 56, 58, 59]正在迅速成为娱乐、艺术、设计和广告等多个领域内容创造的关键，并正在被推广到图像编辑[4, 27, 44, 50]、视频生成[23, 35, 53]等许多其他应用。尽管最近取得了显著进展，输出仍然通常存在诸如<strong>伪影/不切实际、与文本描述不一致以及低审美质量</strong>等问题[30, 52, 54]。例如，在主要由 Stable Diffusion variants 生成的<strong>Pick-a-Pic 数据集</strong>中，许多图像（例如图 1）包含扭曲的人/动物身体（例如，有超过五个手指的人类手）、扭曲的物体和不切实际的问题，例如漂浮的灯。我们人类评估实验发现，数据集中只有大约 10%的生成图像没有伪影和不切实际的问题。同样，文本-图像不一致问题也很常见，例如，提示是“一个男人跳进河里”，但生成的图像显示男人站着。</p>
<p>然而，现有的自动<strong>评估生成图像的指标</strong>，包括众所周知的<strong>IS</strong>[43]和<strong>FID</strong>[20]，是计算在图像分布上的，可能无法反映单个图像的细微差别。最近的研究收集了人类偏好/评级来评估生成图像的质量，并训练了评估模型来预测这些评级[30, 52, 54]，特别是<strong>ImageReward</strong>[54]或<strong>Pick-a-Pic</strong>[30]。虽然更专注，但这些指标仍然将一张图像的质量总结为一个单一的数值评分。在<strong>提示-图像对齐</strong>方面，也有像<strong>CLIPScore</strong>[19]这样的开创性单分数指标，以及最近的问答流程[8, 10, 24, 57]。虽然更加校准和可解释，但这些模型复杂且计算成本高，仍然无法定位图像中的不一致区域。</p>
<p>在本文中，我们提出了一个数据集和模型，用于细粒度的多方面评估，这些评估是可解释和可归因的（例如，归因于图像中的伪影/不切实际区域或图像-文本不一致）。作为第一项贡献，我们收集了一个包含丰富人类反馈的 18K 图像数据集（RichHF-18K），其中包含（i）突出显示图像中不切实际/伪影和文本-图像不一致的点注释；（ii）标记在提示中指定生成图像中缺失或错误表示的概念的词汇；以及（iii）用于图像合理性、文本-图像对齐、审美和整体评分的四种细粒度评分。有了 RichHF-18K，我们设计了一个多模态变换器模型，我们称之为 Rich Automatic Human Feedback（RAHF），以学习预测生成图像及其相关文本提示上的这些丰富的人类注释。因此，我们的模型可以预测不切实际和不一致的区域、不一致的关键词，以及细粒度的评分。这不仅提供了可靠的评级，还提供了关于生成图像质量的更详细和可解释的见解。据我们所知，这是第一个丰富的反馈数据集和模型，用于最新的文本到图像生成模型，提供了一个自动和可解释的流程来评估 T2I 生成。</p>
<p>主要贡献总结如下：</p>
<ol>
<li><strong>第一个丰富的人类反馈数据集（RichHF-18K）</strong> 在生成图像上（包括细粒度评分、不切实际（伪影）/不一致的图像区域和不一致的关键词），在 18K Pick-a-Pic 图像上。</li>
<li><strong>一个多模态变换器模型（RAHF）</strong>，用于<strong>预测生成图像上的丰富反馈</strong>，我们展示了它与测试集上的人类注释高度相关。</li>
<li>我们进一步展示了 RAHF 预测的丰富人类反馈对改进图像生成的有用性：（i）使用预测的热图作为掩码来修复问题图像区域，以及（ii）使用预测的评分来帮助微调图像生成模型（如 Muse[6]），例如，通过选择/过滤微调数据，或作为奖励指导。在这两种情况下，我们都获得了比原始模型更好的图像。</li>
<li>在 Muse 模型上的改进，该模型与用于生成训练集中图像的模型不同，显示了我们的 RAHF 模型的良好泛化能力。</li>
</ol>
<h2 id="2-related-works"><a class="markdownIt-Anchor" href="#2-related-works"></a> 2. Related Works</h2>
<p><strong>Text-to-image generation</strong><br>
文本到图像（T2I）生成模型在深度学习时代经历了几个流行的模型架构的演变和迭代。早期的工作是生成对抗网络（<strong>GAN</strong>）[3, 16, 26]，它训练一个生成器进行<strong>图像生成和一个鉴别器</strong>来区分真实和生成的图像（也见[32, 38, 47, 55, 60, 62]等）。另一类生成模型发展<strong>自变分自编码器</strong>（VAEs）[21, 29, 48]，它们优化证据下界（ELBO）以获得图像数据的可能性。<br>
最近，<strong>扩散模型（DMs）</strong>[22, 36, 41, 46]作为图像生成的最新技术（SOTA）出现[13]。DMs 被训练以<strong>从随机噪声中逐步生成图像，与 GANs 相比能够捕捉更多的多样性，并实现良好的样本质量</strong>[13]。Latent Diffusion Models[41]是进一步的改进，它在紧凑的潜在空间中执行扩散过程，以提高效率。</p>
<p><strong>文本到图像评估和奖励模型</strong><br>
最近有很多工作在多个维度上评估文本到图像模型[9, 25, 30, 31, 37, 51, 52, 54]。Xu 等人[54]通过要求用户对多个图像进行排名并根据其质量进行评分，收集了人类偏好数据集。他们训练了一个<strong>奖励模型 ImageReward</strong>用于人类偏好学习，并提出了<strong>奖励反馈学习（ReFL）</strong> 以使用 ImageReward 模型调整扩散模型。Kirstain 等人[30]构建了一个网络应用，通过要求用户从一对生成的图像中选择更好的图像，收集了超过 500K 个由 T2I 模型（如 Stable Diffusion 2.1, Dreamlike Photoreal 2.05 和 Stable Diffusion XL 变体）生成的 Pick-a-Pic 数据集。他们利用人类偏好数据集训练了一个基于 CLIP[39]的评分函数，称为 PickScore，以预测人类偏好。Huang 等人[25]提出了一个名为 T2I-CompBench 的基准，用于评估文本到图像模型，包括描述属性绑定、对象关系和复杂构图的 6,000 个文本提示。他们利用多个预训练的视觉语言模型，如 CLIP[39]和 BLIP[34]，计算多个评估指标。Wu 等人[51, 52]收集了大规模的人类对生成图像的选择数据集，并利用该数据集训练了一个输出人类偏好分数（HPS）的分类器。他们展示了通过使用 HPS 调整 Stable Diffusion 来改进图像生成。最近，Lee[31]提出了一个全面的评估 T2I 模型的多细粒度指标。</p>
<p>尽管这些贡献很有价值，但大多数现有工作只使用二元人类评级或偏好排名来构建反馈/奖励，并且缺乏提供详细可操作反馈的能力，例如图像中的不切实际区域、不一致区域或不一致关键词。与我们的工作相关的一篇最近的论文是 Zhang 等人[61]，他们收集了图像合成任务的伪影区域数据集，训练了一个基于分割的模型来预测伪影区域，并提出了一种针对这些区域的区域修复方法。然而，他们的工作重点是伪影区域，而本文我们收集了包含不仅是伪影区域，还包括不一致区域、不一致关键词和多个方面的四种细粒度评分的 T2I 生成的丰富反馈。据我们所知，这是第一项关于文本到图像模型的异构丰富人类反馈的工作。</p>
<h2 id="3-collecting-rich-human-feedback"><a class="markdownIt-Anchor" href="#3-collecting-rich-human-feedback"></a> 3. Collecting rich human feedback</h2>
<p><strong>3.1 数据收集过程</strong></p>
<p>在本节中，我们讨论了我们收集 RichHF-18K 数据集的过程，该数据集包括两个热图（伪影/不切实际和不一致）、四种细粒度评分（合理性、对齐、审美和总体评分）以及一个文本序列（不一致关键词）。对于每个生成的图像，首先要求注释者检查图像并阅读用于生成它的文本提示。然后，他们标记图像上的点以指示任何不切实际/伪影或与文本提示不一致的位置。注释者被告知每个标记点都有一个“有效半径”（图像高度的 1/20），这形成了以标记点为中心的想象圆盘。通过这种方式，我们可以使用相对较少的点来覆盖图像中有缺陷的区域。最后，注释者在 5 点李克特量表上分别为合理性、图像-文本对齐、审美和整体质量标记不一致关键词和四种评分。图像不切实际/伪影和不一致的详细定义可以在补充材料中找到。我们设计了一个网络 UI，如图 1 所示，以促进数据收集。关于数据收集过程的更多细节可以在补充材料中找到。</p>
<p><strong>3.2 人类反馈整合</strong></p>
<p>为了提高收集到的人类反馈在生成图像上的可靠性，每个图像-文本对由三个注释者注释。因此，我们需要整合每个样本的多个注释。对于评分，我们简单地平均多个注释者的评分以获得最终评分。对于不一致关键词注释，我们执行多数投票以获得最终的对齐/不一致指标序列，使用关键词的最频繁标签。对于点注释，我们首先将它们转换为每个注释的热图，其中每个点被转换为热图上的圆盘区域（如上一子节中讨论的），然后我们计算跨注释者的平均热图。明显不切实际的区域可能会被所有注释者注释，并在最终平均热图上具有高值。</p>
<p><strong>3.3 RichHF-18K: 一个丰富人类反馈的数据集</strong></p>
<p>我们从 Pick-a-Pic 数据集中选择了一个图像-文本对的子集进行数据注释。尽管我们的方法普遍适用并且适用于任何生成的图像，但我们选择的大多数数据集是照片写实图像，由于其重要性和更广泛的应用。此外，我们还想在图像中拥有平衡的类别。为确保平衡，我们利用 PaLI 视觉问题回答（VQA）模型[7]从 Pick-a-Pic 数据样本中提取一些基本特征。具体来说，我们为 Pick-a-Pic 中的每个图像-文本对提出了以下问题。1）图像是否写实？2）哪个类别最好地描述了图像？在‘人类’、‘动物’、‘对象’、‘室内场景’、‘室外场景’中选择一个。PaLI 对这两个问题的回答通常在我们的手动检查下是可靠的。我们使用这些答案从 Pick-a-Pic 中采样一个多样化的子集，结果得到了 17K 图像-文本对。我们将 17K 样本随机分成两个子集，一个训练集有 16K 样本，一个验证集有 1K 样本。16K 训练样本的属性分布在补充材料中显示。此外，我们收集了 Pick-a-Pic 测试集中独特提示及其对应图像的丰富人类反馈作为我们的测试集。总共，我们收集了来自 Pick-a-Pic 的 18K 图像-文本对的丰富人类反馈。我们的 RichHF18K 数据集包括 16K 训练、1K 验证和 1K 测试样本。</p>
<p><strong>3.4 RichHF-18K 的数据统计</strong></p>
<p>在本节中，我们总结了评分的统计数据，并进行了评分的注释者一致性分析。我们使用公式（s-smin）/（smax-smin）标准化评分 s，以便评分位于[0,1]范围内（smax=5 和 smin=1）。评分的直方图如图 2 所示。评分的分布类似于高斯分布，而合理性和文本-图像对齐评分的 1.0 评分比例略高。收集到的评分分布确保我们有合理的负面和正面样本数量，用于训练一个好的奖励模型。为了分析注释者对图像-文本对的评分一致性，我们计算了评分之间的最大差异：maxdiff = max(scores) - min(scores)，其中评分是图像-文本对的三个评分标签。我们在图 4 中绘制了 maxdiff 的直方图。我们可以看到，大约 25%的样本具有完美的注释者一致性，大约 85%的样本具有良好的注释者一致性（标准化后 maxdiff 小于或等于 0.25 或 5 点李克特量表中的 1）。</p>
]]></content>
      <categories>
        <category>多模态</category>
      </categories>
      <tags>
        <tag>RLHF</tag>
      </tags>
  </entry>
  <entry>
    <title>最近公共祖先（LCA)</title>
    <url>/sni2zo/</url>
    <content><![CDATA[<h1 id="问题场景"><a class="markdownIt-Anchor" href="#问题场景"></a> 问题场景</h1>
<p>给定一颗无向树，并且给出树中任意两个结点，要求求出这两个节点的最近公共祖先。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/004db5ed85c62379cc49ae89e2bb5e9.jpg" alt="004db5ed85c62379cc49ae89e2bb5e9.jpg|850" style="zoom:50%;"></p>
<h1 id="倍增法"><a class="markdownIt-Anchor" href="#倍增法"></a> 倍增法</h1>
<h2 id="1dfs初始化"><a class="markdownIt-Anchor" href="#1dfs初始化"></a> 1.DFS初始化</h2>
<p>这里直接说解决方法，推荐使用倍增法，原理和跳表(<strong>Skiplist</strong>)大致相似。原理是使用一个数组，<code>father[i][j]</code>，含义是结点i的第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>j</mi></msup></mrow><annotation encoding="application/x-tex">2^{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span></span></span></span> 个父节点。</p>
<h3 id="1父节点处理"><a class="markdownIt-Anchor" href="#1父节点处理"></a> （1）父节点处理</h3>
<p>和跳表类似，其实对于每个节点，我们开个大小为31的<code>father[i][31]</code>一般就够用了，其实使用幂乘运算很显然，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>j</mi></msup><mo>=</mo><msup><mn>2</mn><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>×</mo><msup><mn>2</mn><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^j=2^{j-1}\times2^{j-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.907994em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，所以对于某个节点a，<strong>a的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>j</mi></msup></mrow><annotation encoding="application/x-tex">2^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span></span></span>个父节点等于 {a的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{j-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>个节点的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{j-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>个父节点}</strong>。 这句话直接看的话可能不太直观，下面是代码描述：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">31</span>;i++){</span><br><span class="line"> father[root][i]=father[father[root][i-<span class="number">1</span>]][i-<span class="number">1</span>];</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<h3 id="2计算每个节点的深度"><a class="markdownIt-Anchor" href="#2计算每个节点的深度"></a> （2）计算每个节点的深度</h3>
<p>不过只知道每个节点的父节点还不够，如果要求LCA，还需要知道每个节点相对于根节点的深度<code>depth[i]</code>。这个简单，只需要在dfs的时候记录一下就可以了。</p>
<h2 id="2调整深度寻找lca"><a class="markdownIt-Anchor" href="#2调整深度寻找lca"></a> 2.调整深度寻找LCA</h2>
<h3 id="1求解深度差将两个结点置于同一深度"><a class="markdownIt-Anchor" href="#1求解深度差将两个结点置于同一深度"></a> （1）求解深度差，将两个结点置于同一深度</h3>
<p>这里的做法是首先求出深度差，比如差值为7，那么转成二进制就是<code>00000111</code>,那么对于较深的那个节点a，有以下几条步骤：</p>
<ol>
<li>第一步，走一步，找到a的父节点b；</li>
<li>第二步，走两步，找到b的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">2^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span>个父节点c；</li>
<li>第三步，走四步，找到c的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>个父节点d。<br>
这样一来，最终找到的节点d与a的深度差一定是：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>4</mn><mo>=</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">1+2+4=7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>。目标达成。</li>
</ol>
<h3 id="2遍历父节点直到两个结点变成lca的两个不同儿子"><a class="markdownIt-Anchor" href="#2遍历父节点直到两个结点变成lca的两个不同儿子"></a> （2）遍历父节点，直到两个结点变成LCA的两个不同儿子</h3>
<p>做完第一步有两种情况，情况1是我们刚好找到了LCA，如下图：<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/20241118140205.png" alt="image.png|493" style="zoom: 33%;"><br>
这种情况就非常幸运了，直接返回这个节点就可以了。</p>
<p>不过，情况2更为常见，就是我们找到的x和y其实是深度相同的不同节点。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/004db5ed85c62379cc49ae89e2bb5e9.jpg" alt="004db5ed85c62379cc49ae89e2bb5e9.jpg" style="zoom:33%;"><br>
那么这种情况下，还是需要继续遍历的，<strong>此时的a就是刚才find的那个‘7’</strong>。我们直接从最大的<code>j=30</code>开始遍历，那么因为这个数字很大，所以一开始father[a][30]和father[b][30]一定都是相同的。</p>
<p>不断减小j，如果减小到一定程度,搞好father[a][j]和father[b][j]不相同，那么就可以进一步缩小范围，更新 <code>a=father[a][j]</code>，<code>b=father[b][j]</code>。直接进一步减少j，直到找到最接近LCA的两个不同的a和b。</p>
<blockquote>
<p>[!note]<br>
Question:为什么这里第一次找到不同的father[a][j]和father[b][j]时不能break？</p>
</blockquote>
<p>这里非常推荐使用<mark>二进制</mark>的方式回答这个问题。我们可以回顾求深度差的那个部分，现实中非常有可能出现的情况是，LCA和a的深度差并不是2的整数幂！！！</p>
<p>比如LCA距离a的深度差为23，化成二进制就是<code>10101</code>，如果只跳一次就是16，就是<code>10000</code>，所以还是需要继续寻找更小的j的，这里不能就在第一次的时候就break！！</p>
<h1 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码</h1>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">100005</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> LOGN = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; adj[MAXN];</span><br><span class="line"><span class="type">int</span> fa[MAXN][LOGN], dep[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> node, <span class="type">int</span> parent)</span> </span>{</span><br><span class="line">    fa[node][<span class="number">0</span>] = parent;</span><br><span class="line">    dep[node] = dep[parent] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; LOGN; i++) {</span><br><span class="line">        fa[node][i] = fa[fa[node][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 每个节点都连接着自己的父节点，加上此句避免重复访问</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> child : adj[node]) {</span><br><span class="line">        <span class="keyword">if</span> (child != parent) {</span><br><span class="line">            <span class="built_in">dfs</span>(child, node);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">preprocess</span><span class="params">(<span class="type">int</span> root)</span> </span>{</span><br><span class="line">    dep[root] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(root, <span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>{</span><br><span class="line">  <span class="comment">// 令 y 比 x 深。</span></span><br><span class="line">  <span class="keyword">if</span> (dep[x] &gt; dep[y]) <span class="built_in">swap</span>(x, y);</span><br><span class="line">  <span class="comment">// 令 y 和 x 在一个深度。</span></span><br><span class="line">  <span class="type">int</span> tmp = dep[y] - dep[x];</span><br><span class="line">  <span class="comment">// 根据深度差的二进制值选择y的父节点，保证y和x的深度是相同的</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; tmp; ++j, tmp &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> (tmp &amp; <span class="number">1</span>) y = fa[y][j];</span><br><span class="line">  <span class="comment">// 如果这个时候 y = x，那么 x，y 就都是它们自己的祖先。</span></span><br><span class="line">  <span class="keyword">if</span> (y == x) <span class="keyword">return</span> y;</span><br><span class="line">  <span class="comment">// 不然的话，找到第一个不是它们祖先的两个点。</span></span><br><span class="line">  <span class="comment">// (人话) 也就是找到LCA儿子中的任意两个不同点</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">30</span>; j &gt;= <span class="number">0</span> &amp;&amp; y != x; --j) {</span><br><span class="line">    <span class="comment">// 只要是不同点，每次都保存</span></span><br><span class="line">    <span class="keyword">if</span> (fa[x][j] != fa[y][j]) {</span><br><span class="line">      x = fa[x][j];</span><br><span class="line">      y = fa[y][j];</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// 此时x和y已经是LCA中的两个不同节点了，那么它们两的直接父亲一定就是LCA</span></span><br><span class="line">  <span class="keyword">return</span> father[x][<span class="number">0</span>];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        adj[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">        adj[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">preprocess</span>(<span class="number">1</span>); <span class="comment">// 假设1是根节点</span></span><br><span class="line">    <span class="keyword">while</span> (q--) {</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">lca</span>(u, v) &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>Leetcode</tag>
        <tag>树</tag>
      </tags>
  </entry>
  <entry>
    <title>前缀和+差分</title>
    <url>/sni2z0/</url>
    <content><![CDATA[<p>前缀和对我来说已经不算陌生了，前缀和的方便之处在于可以 <strong>快速求解任意子数组之和</strong>。但是，前缀和在区间频繁修改时就显得较为羸弱了，因为它只适合求和，不擅长修改。</p>
<p>那么，如果某些<strong>区间频繁修改</strong>（<strong>仅限于都增加或者都减少某个值</strong>），但是求和只有一次，这种时候首先会想到的就是<strong>线段树</strong>了，不过线段树的代码量太多，使用差分则更简单，也更快。</p>
<h1 id="什么是差分"><a class="markdownIt-Anchor" href="#什么是差分"></a> 什么是差分？</h1>
<p>差分的意思主要是这个 <strong>差</strong>，指的其实就是 <strong>元素差</strong>。</p>
<p>前缀和的思想是动态规划，可以将前 n 个元素的和预先存储起来，这样计算区间和的时候就不需要再按需进行累加了。</p>
<p>而差分的思想就是 <strong>先求出相邻元素之间的差</strong>，当需要某个区间<code>[a,b]</code>增加或者减少某个值的，只需要修改 <code>arr[a]</code> 和 <code>arr[b+1]</code>，然后重新计算一次前缀和就可以了。</p>
<h2 id="一维数组差分"><a class="markdownIt-Anchor" href="#一维数组差分"></a> 一维数组差分</h2>
<p>如果有一个数组 <code>[1, 2, 3, 4, 5]</code>，其差分数组为 <code>[1, 1, 1, 1, 1]</code>。如果要将区间 <code>[1, 3]</code> 中的每个元素增加 2，可以通过修改差分数组 <code>diff[1] += 2</code> 和<code>diff[4] -= 2</code>来实现，得到新的差分数组<code>[1, 3, 1, 1, -1]</code>。通过重建数组可以得到<code>[1, 4, 5, 6, 5]</code>。</p>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/a5d44b1e910f2d6038dc34fc3a64086.jpg" alt="a5d44b1e910f2d6038dc34fc3a64086.jpg" style="zoom: 33%;">
<h2 id="树上差分"><a class="markdownIt-Anchor" href="#树上差分"></a> 树上差分</h2>
<p>刚才只是在一维数组上差分，实现起来还是比较简单的，如果我们是在树上进行差分呢？<br>
树上差分刚才只是在一维数组上差分，实现起来还是比较简单的，如果我们是在树上进行差分呢？</p>
<p>场景：现在给你一颗树，并且告诉你起始节点和结束节点，对起始节点和结束节点路径中的所有节点的值都加上value。需要注意的是，<strong>这里的树指的是一颗无向树，也就是说并不是像只能从父节点向子节点的那种遍历，只要是这个节点连接到的结点，都是可以遍历到的。</strong><br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/05ca61d668ebe7e80a7514d8888ee46.jpg" alt="05ca61d668ebe7e80a7514d8888ee46.jpg" style="zoom: 33%;"></p>
<p>如果要使用树上差分，就必不可免要使用到树中节点的 <strong>最近公共祖先</strong> 求解算法。[[最近公共祖先（LCA)]] 。关于LCA的求解推荐使用倍增法，可以详细看看。<br>
<img lazyload="" src="/images/loading.svg" data-src="https://typora-aliyun01.oss-cn-hangzhou.aliyuncs.com/img/06223d47370e6ef8ba55e63bc42ef1c.jpg" alt="06223d47370e6ef8ba55e63bc42ef1c.jpg" style="zoom:33%;"><br>
如图所示，实现差分我们只需要修改四个点的权值，起始点和终结点就不用说了，关键是这个 <strong>LCA还有LCA的父节点</strong>。这里你可能会有如下问题：</p>
<blockquote>
<p>[!note]<br>
为什么这里还要将LCA的父节点权值也下降？</p>
<p>原因是我们<strong>从根节点1开始进行DFS</strong>，原本的前缀和在这里更像“后缀和”。<br>
DFS的过程中，每个节点的权值更新为其所有子孙的权值总和，weight[i]=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mi>i</mi><mi>n</mi></msubsup><mrow><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">[</mo><mi>s</mi><mi>o</mi><mi>n</mi><mo stretchy="false">]</mo></mrow></mrow><annotation encoding="application/x-tex">\sum_i^n{weight[son]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mopen">[</span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span></span></p>
<p><strong>对于LCA本身，其本身只需要+3，不过a和b都是他的子孙，所以其本身-3</strong>。对于LCA的父节点，他的权值应该是不变的，刚才LCA减去3是因为LCA要+3，但是LCA的父节点应该是不变的，因此LCA的父节点权值也需要下降。</p>
</blockquote>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> {</span><br><span class="line">    <span class="keyword">public</span>: <span class="function"><span class="type">int</span> <span class="title">maxRemoval</span><span class="params">(vector &lt; <span class="type">int</span> &gt; &amp; nums, vector &lt; vector &lt; <span class="type">int</span> &gt;&gt; &amp; queries)</span> </span>{</span><br><span class="line">        <span class="comment">// sort(queries.begin(), queries.end(), [](vector&lt;int&gt;&amp;a, vector&lt;int&gt;&amp;b){</span></span><br><span class="line">        <span class="comment">//     if (a[0]!=b[0])</span></span><br><span class="line">        <span class="comment">//         return a[0]&lt;b[0];</span></span><br><span class="line">        <span class="comment">//     else</span></span><br><span class="line">        <span class="comment">//         return a[1]&gt;b[1];</span></span><br><span class="line">        <span class="comment">// });</span></span><br><span class="line">        <span class="built_in">sort</span>(queries.<span class="built_in">begin</span>(), queries.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        vector &lt; <span class="type">int</span> &gt; <span class="built_in">diff</span>(n + <span class="number">1</span>);</span><br><span class="line">        LL sum = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">        priority_queue &lt; <span class="type">int</span> &gt; pq;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            <span class="keyword">while</span> (j &lt; queries.<span class="built_in">size</span>() &amp;&amp; queries[j][<span class="number">0</span>] &lt;= i) {</span><br><span class="line">                pq.<span class="built_in">push</span>(queries[j][<span class="number">1</span>]);</span><br><span class="line">                j++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">while</span> (sum + diff[i] &lt; nums[i]) {</span><br><span class="line">                <span class="keyword">if</span> (pq.<span class="built_in">empty</span>()) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span> (pq.<span class="built_in">top</span>() &lt; i) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                <span class="type">int</span> t = pq.<span class="built_in">top</span>();</span><br><span class="line">                pq.<span class="built_in">pop</span>();</span><br><span class="line">                sum += <span class="number">1</span>;</span><br><span class="line">                diff[t + <span class="number">1</span>] -= <span class="number">1</span>;</span><br><span class="line">                ret++;</span><br><span class="line">            }</span><br><span class="line">            sum += diff[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> queries.<span class="built_in">size</span>() - ret;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>Leetcode</tag>
        <tag>动态规划</tag>
        <tag>前缀和</tag>
        <tag>差分</tag>
      </tags>
  </entry>
</search>
